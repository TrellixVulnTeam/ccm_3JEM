{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useContext } from 'react';\nimport Styled from 'styled-components';\nimport Layout from '../components/layout';\nimport { BlockOutlined, RadarChartOutlined } from '@ant-design/icons';\nimport http, { fetch } from '../utils/http';\nimport { getDuration } from '../utils/date';\nimport { injectIntl } from 'react-intl';\nimport Chart from 'chart.js';\nimport Link from 'next/link';\nimport { MyContext } from '../reducer';\nconst Title = injectIntl(({\n  intl,\n  type,\n  refresh\n}) => {\n  const {\n    0: blockLoading,\n    1: setBlockLoading\n  } = useState(false);\n  const {\n    0: tradeLoading,\n    1: setTradeLoading\n  } = useState(false);\n\n  const handeRefresh = async () => {\n    if (type === 'block') {\n      setBlockLoading(true);\n      refresh(await handleGetBlock(false));\n      setBlockLoading(false);\n    } else {\n      setTradeLoading(true);\n      refresh(await handleGetTrade(false));\n      setTradeLoading(false);\n    }\n  };\n\n  return __jsx(CTitle, null, __jsx(\"div\", {\n    className: \"title\"\n  }, __jsx(\"span\", null, type === 'block' ? __jsx(BlockOutlined, null) : __jsx(RadarChartOutlined, null), type === 'block' ? __jsx(\"em\", null, intl.messages.lang8) : __jsx(\"em\", null, intl.messages.lang56)), __jsx(\"div\", {\n    className: \"rs-home-block-top\"\n  }, __jsx(_Button, {\n    loading: type === 'block' && blockLoading || type === 'trade' && tradeLoading,\n    size: \"small\",\n    type: \"primary\",\n    onClick: () => handeRefresh()\n  }, intl.messages.lang12), __jsx(_Button, {\n    size: \"small\",\n    style: {\n      marginLeft: 10\n    },\n    type: \"primary\",\n    href: type === 'block' ? '/block' : '/trade'\n  }, intl.messages.lang13))));\n});\nconst Index = injectIntl(({\n  info,\n  intl,\n  block,\n  trade,\n  lang\n}) => {\n  const {\n    state\n  } = useContext(MyContext);\n  const {\n    0: blockList,\n    1: setBlockList\n  } = useState(block);\n  const {\n    0: tradeList,\n    1: setTradeList\n  } = useState(trade);\n  const {\n    0: chartData,\n    1: setChartData\n  } = useState([]);\n  useEffect(() => {\n    http.get('/api/home/charts', data => {\n      setChartData(data);\n    });\n  }, []);\n  useEffect(() => {\n    if (chartData.length) {\n      handleChange();\n    }\n  }, [chartData]);\n\n  const handleChange = () => {\n    var options = {\n      legend: {\n        display: false\n      },\n      maintainAspectRatio: true,\n      // responsive: false,\n      // spanGaps: false,\n      elements: {\n        line: {\n          tension: 0.000001\n        }\n      },\n      plugins: {\n        filler: {\n          propagate: false\n        }\n      },\n      scales: {\n        xAxes: [{\n          ticks: {\n            // autoSkip: false,\n            maxRotation: 0\n          }\n        }]\n      }\n    };\n    const ccmChart = document.getElementById('ccmChart').getContext('2d');\n    ccmChart.canvas.height = 160;\n    new Chart(ccmChart, {\n      type: 'line',\n      data: {\n        labels: chartData.map(item => `${item._id.mmonth} - ${item._id.day}`),\n        datasets: [{\n          backgroundColor: '#8bc7ff',\n          borderColor: '#1890ff',\n          data: chartData.map(item => item.count),\n          fill: 'start',\n          label: ''\n        }]\n      },\n      options: options\n    });\n  };\n\n  return __jsx(Layout, null, __jsx(CcInfo, {\n    state: state\n  }, __jsx(\"div\", {\n    className: \"rs-home-info\"\n  }, __jsx(\"div\", {\n    className: \"title\"\n  }, \"CCM\"), __jsx(\"div\", {\n    className: \"rs-home-price\"\n  }, \"$ \", info.last, __jsx(\"span\", {\n    className: info.change >= 0 ? '' : 'font-red'\n  }, info.change >= 0 ? '+' : '', info.change, \"%\")), __jsx(\"div\", {\n    className: \"rs-home-info-list\"\n  }, __jsx(\"span\", null, intl.messages.lang10), __jsx(\"em\", null, info.vol)), __jsx(\"div\", {\n    className: \"rs-home-info-list\"\n  }, __jsx(\"span\", null, intl.messages.lang8), __jsx(\"em\", null, info.block)), __jsx(\"div\", {\n    className: \"rs-home-info-list\"\n  }, __jsx(\"span\", null, intl.messages.lang11), __jsx(\"em\", null, info.tradeNumber))), __jsx(\"div\", {\n    className: \"rs-home-tr\"\n  }, __jsx(\"div\", {\n    className: \"title\"\n  }, intl.messages.lang6), __jsx(\"canvas\", {\n    id: \"ccmChart\",\n    style: {\n      width: '100%'\n    }\n  }))), __jsx(Trade, {\n    state: state\n  }, __jsx(\"div\", {\n    className: \"rs-home-block\"\n  }, __jsx(Title, {\n    type: \"block\",\n    refresh: setBlockList\n  }), __jsx(\"div\", {\n    className: \"rs-home-block-list\"\n  }, blockList.map((item, i) => __jsx(\"div\", {\n    key: i,\n    className: \"rs-home-block-li\"\n  }, __jsx(\"div\", {\n    className: \"rs-home-block-li-block\"\n  }, __jsx(Link, {\n    href: `/block/${item.number}`,\n    as: `/block/${item.number}`\n  }, __jsx(\"a\", null, \"Block \", item.number)), __jsx(\"div\", null, getDuration(item.timestamp, intl.locale).toString(), \" \", intl.messages.lang14)), __jsx(\"div\", {\n    className: \"rs-home-block-li-ri\"\n  }, __jsx(\"div\", {\n    className: \"block\"\n  }, __jsx(\"span\", null, intl.messages.lang15), __jsx(Link, {\n    href: `/addr/${item.miner}`,\n    as: `/addr/${item.miner}`\n  }, __jsx(\"a\", null, item.miner))), __jsx(\"div\", {\n    className: \"txns\"\n  }, item.txn, \" txns\")))))), __jsx(\"div\", {\n    className: \"rs-home-ts\"\n  }, __jsx(Title, {\n    type: \"trade\",\n    refresh: setTradeList\n  }), __jsx(\"div\", {\n    className: \"rs-home-ts-list\"\n  }, tradeList.map((item, i) => {\n    var _item$input, _item$input2, _item$input3;\n\n    return __jsx(\"div\", {\n      key: i,\n      className: \"rs-home-ts-li\"\n    }, __jsx(RadarChartOutlined, null), __jsx(\"div\", {\n      className: \"rs-home-ts-cont\"\n    }, __jsx(\"div\", {\n      className: \"addr\"\n    }, __jsx(\"span\", null, \"TX\"), __jsx(Link, {\n      href: `/hash/${item.hash}`,\n      as: `/hash/${item.hash}`\n    }, __jsx(\"a\", null, item.hash))), __jsx(\"div\", {\n      className: \"path\"\n    }, __jsx(\"span\", null, intl.messages.lang16), __jsx(Link, {\n      href: `/addr/${item.from}`,\n      as: `/addr/${item.from}`\n    }, __jsx(\"a\", null, item.from)), __jsx(\"span\", {\n      className: \"an\"\n    }, intl.messages.lang17), item.value === '0' ? __jsx(Link, {\n      href: `/addr/0x${(_item$input = item.input) === null || _item$input === void 0 ? void 0 : _item$input.substring(34, 74)}`,\n      as: `/addr/0x${(_item$input2 = item.input) === null || _item$input2 === void 0 ? void 0 : _item$input2.substring(34, 74)}`\n    }, __jsx(\"a\", null, \"0x\", (_item$input3 = item.input) === null || _item$input3 === void 0 ? void 0 : _item$input3.substring(34, 74))) : __jsx(Link, {\n      href: `/addr/${item.to}`,\n      as: `/addr/${item.to}`\n    }, __jsx(\"a\", null, item.to)))), __jsx(\"div\", {\n      className: \"time\"\n    }, getDuration(item.timestamp, intl.locale).toString(), intl.messages.lang14));\n  })))));\n});\nconst CcInfo = Styled.div.withConfig({\n  displayName: \"pages__CcInfo\",\n  componentId: \"sc-5ksz4j-0\"\n})([\"height:\", \";display:\", \";> div{padding:20px;width:\", \";height:100%;background:#fff;border-radius:6px;&:first-child{margin-right:\", \";margin-bottom:\", \";}.title{font-size:18px;margin-bottom:10px;color:#666;}.rs-home-price{display:flex;align-items:center;color:#323232;font-size:24px;line-height:24px;margin-bottom:20px;span{margin-left:15px;color:#38c9af;font-size:16px;&.font-red{color:#e66157;}}}.rs-home-info-list{margin-bottom:20px;display:flex;align-items:center;span{color:#999;line-height:18px;height:18px;font-size:14px;}em{flex:1;color:#6E7594;text-align:right;font-weight:bold;}}}\"], props => props.state.window > 1199 ? '240px' : 'auto', props => props.state.window > 1199 ? 'flex' : 'block', props => props.state.window > 1199 ? '49.5%' : '100', props => props.state.window > 1199 ? '1%' : '0', props => props.state.window > 1199 ? '0' : '20px');\nconst Trade = Styled.div.withConfig({\n  displayName: \"pages__Trade\",\n  componentId: \"sc-5ksz4j-1\"\n})([\"margin-top:20px;border-radius:6px;display:\", \";background:#fff;> div{padding:0 10px 15px;width:\", \";&:first-child{border-right:1px solid #eee;}.rs-home-block-list{padding:0 10px 20px;overflow-y:auto;height:620px;.rs-home-block-li{height:60px;margin-bottom:20px;display:flex;.rs-home-block-li-block{text-align:center;background:#40a9ff;padding:10px;color:#fff;margin-right:10px;width:120px;border-radius:4px;font-size:14px;color:#fff;a{text-decoration:underline;height:20px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;width:100px;display:block;color:#fff;}}.rs-home-block-li-ri{flex:1;align-items:center;width:100%;overflow:hidden;.block{height:20px;line-height:20px;color:#40a9ff;margin-top:10px;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;span{color:#333;}}.txns{color:#40a9ff;}}}}.rs-home-ts-list{padding:0 10px 20px;overflow-y:auto;height:620px;.rs-home-ts-li{display:flex;align-items:center;height:60px;margin-bottom:20px;> span{margin-right:15px;font-size:24px;}.rs-home-ts-cont{flex:1;overflow:hidden;.addr{color:#40a9ff;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;span{color:#333;margin-right:5px;font-weight:600;}}.path{display:flex;span{color:#999;margin-right:5px;&.an{margin-left:5px}}a{color:#40a9ff;max-width:172px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;}}}.time{width:120px;text-align:right;margin-left:10px;color:#999;}}}}\"], props => props.state.window > 1199 ? 'flex' : 'block', props => props.state.window > 1199 ? '50%' : '100%');\nconst CTitle = Styled.div.withConfig({\n  displayName: \"pages__CTitle\",\n  componentId: \"sc-5ksz4j-2\"\n})([\".title{font-size:16px;margin-bottom:15px;color:#999;border-bottom:1px solid #eee;display:flex;height:45px;align-items:center;> span{font-weight:600;color:#666;em{margin-left:10px;}}.rs-home-block-top{text-align:right;flex:1;display:flex;align-items:center;justify-content:flex-end;}}\"]);\n\nconst handleGetBlock = async (isServer, ctx) => {\n  if (isServer) {\n    return await fetch(`/api/home/block`, ctx);\n  } else {\n    return await http.get('/api/home/block');\n  }\n};\n\nconst handleGetTrade = async (isServer, ctx) => {\n  if (isServer) {\n    return await fetch(`/api/home/trade`, ctx);\n  } else {\n    return await http.get('/api/home/trade');\n  }\n};\n\nexport const getServerSideProps = async ctx => {\n  const list = await Promise.all([fetch(`/api/home/block`, ctx), fetch(`/api/home/trade`, ctx), await fetch(`/api/home/info`, ctx)]);\n  return {\n    props: {\n      block: list[0],\n      trade: list[1],\n      info: list[2]\n    }\n  };\n};\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}