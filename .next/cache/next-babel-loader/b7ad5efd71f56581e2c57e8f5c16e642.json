{"ast":null,"code":"import \"antd/lib/empty/style\";\nimport _Empty from \"antd/lib/empty\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useLayoutEffect } from 'react';\nimport React, { Component } from 'react';\nimport Styled from 'styled-components';\nimport http from '../../utils/http';\nimport { injectIntl } from 'react-intl';\nconst GridH5 = injectIntl(({\n  url,\n  columns,\n  otherParam = '',\n  isShow,\n  intl\n}) => {\n  const {\n    0: gridData,\n    1: setGridData\n  } = useState([]);\n  const ps = 6;\n  const {\n    0: pn,\n    1: setPn\n  } = useState(1);\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(0);\n  const {\n    0: first,\n    1: setFirst\n  } = useState(true);\n\n  const init = (number, type) => {\n    http.get(`${url}?pn=${number || pn}&ps=${ps}${otherParam}`, data => {\n      const number = data.total % ps === 0 ? data.total / ps : Math.ceil(data.total / ps);\n      setTotalPage(number);\n      setGridData(type === 'concat' ? gridData.concat(data.rows) : data.rows);\n    });\n  };\n\n  useEffect(() => {\n    isShow && init();\n  }, []);\n  useEffect(() => {\n    if (first) {\n      setFirst(false);\n    } else {\n      setPn(1);\n      init(1);\n    }\n  }, [otherParam]);\n\n  const handleNextPage = () => {\n    setPn(pn + 1);\n    init(pn + 1, 'concat');\n  };\n\n  return __jsx(Box, null, gridData.map(item => __jsx(GridList, {\n    key: item._id\n  }, __jsx(\"div\", {\n    className: \"rs-h5-grid-title\"\n  }, columns[0].title, \" # \", columns[0].render(item[columns[0].dataIndex], item)), columns.slice(1).map(col => col.h5 ? __jsx(\"div\", {\n    className: \"rs-h5-table-li\",\n    key: col.dataIndex\n  }, __jsx(\"span\", null, col.title, \":\"), __jsx(\"p\", null, col.render(item[col.dataIndex], item))) : ''))), gridData.length === 0 && __jsx(_Empty, {\n    style: {\n      paddingTop: 20\n    }\n  }), totalPage !== 0 && pn < totalPage && __jsx(\"div\", {\n    className: \"next-page\",\n    onClick: () => handleNextPage()\n  }, intl.messages.lang63));\n});\nconst Box = Styled.div.withConfig({\n  displayName: \"Grid-h5__Box\",\n  componentId: \"sc-1jk98l4-0\"\n})([\"padding-bottom:30px;.next-page{margin-top:20px;text-align:center;color:#1890ff;height:50px;line-height:50px;font-size:16px;}\"]);\nconst GridList = Styled.div.withConfig({\n  displayName: \"Grid-h5__GridList\",\n  componentId: \"sc-1jk98l4-1\"\n})([\"box-shadow:0 0 8px 0 hsla(0,0%,40%,.11);background:#fff;padding:10px;margin-bottom:10px;border-radius:6px;.rs-h5-grid-title{height:30px;line-height:30px;border-bottom:1px solid #eee;margin-bottom:10px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;}.rs-h5-table-li{display:flex;line-height:25px;> span{text-align:right;color:rgb(119,130,177);padding-right:10px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;}p{flex:1;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;margin:0;}}\"]);\nexport default GridH5;","map":null,"metadata":{},"sourceType":"module"}