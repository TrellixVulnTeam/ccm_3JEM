{"ast":null,"code":"import Router from './core/router';\nimport web3 from './core/monitorWeb3';\nimport BigNumber from 'bignumber.js';\nimport { parseQueryString } from '../utils/common';\nconst contractabi = [{\n  constant: true,\n  inputs: [{\n    name: '_owner',\n    type: 'address'\n  }],\n  name: 'balanceOf',\n  outputs: [{\n    name: 'balance',\n    type: 'uint256'\n  }],\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'decimals',\n  outputs: [{\n    name: '',\n    type: 'uint8'\n  }],\n  type: 'function'\n}];\nRouter.get('/addr/token/balance', async ({\n  url\n}) => {\n  const param = parseQueryString(url);\n  const {\n    address,\n    contractaddress,\n    decimals\n  } = param;\n  const contractother = web3.eth.Contract(contractabi, contractaddress);\n  const balance = await contractother.methods.balanceOf(address).call();\n\n  if (balance) {\n    const Ether = new BigNumber(`10e${decimals !== undefined ? decimals - 1 : 17}`);\n    let ret = new BigNumber(balance);\n    const data = ret.dividedBy(Ether);\n    return data;\n  } else {\n    return '';\n  }\n});","map":null,"metadata":{},"sourceType":"module"}