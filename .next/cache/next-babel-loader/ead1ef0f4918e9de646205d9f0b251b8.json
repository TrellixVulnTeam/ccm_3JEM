{"ast":null,"code":"import Web3 from 'web3';\nconst config = process.cfg.config;\n\nconst getProvider = () => {\n  const provider = new Web3.providers.WebsocketProvider(`ws://${config.nodeAddr}:${config.wsPort.toString()}`);\n  provider.on('connect', () => console.log('WS Connected'));\n  provider.on('error', e => {\n    console.error('WS Error', e);\n    web3.setProvider(getProvider());\n  });\n  provider.on('end', e => {\n    console.error('WS End', e);\n    web3.setProvider(getProvider());\n  });\n  return provider;\n};\n\nconst getWeb3 = () => {\n  var _global$web;\n\n  if ((_global$web = global.web3) === null || _global$web === void 0 ? void 0 : _global$web.eth) {\n    return global.web3;\n  } else {\n    const web3 = new Web3(getProvider());\n    global.web3 = web3;\n    return web3;\n  }\n};\n\nexport default getWeb3();","map":null,"metadata":{},"sourceType":"module"}