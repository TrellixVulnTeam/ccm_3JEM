{"ast":null,"code":"import \"antd/lib/empty/style\";\nimport _Empty from \"antd/lib/empty\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useLayoutEffect } from 'react';\nimport React, { Component } from 'react';\nimport Styled from 'styled-components';\nimport http from '../../utils/http';\nimport { injectIntl } from 'react-intl';\nconst GridH5 = injectIntl(({\n  url,\n  columns,\n  otherParam = '',\n  isShow,\n  intl\n}) => {\n  const {\n    0: gridData,\n    1: setGridData\n  } = useState([]);\n  const ps = 6;\n  const {\n    0: pn,\n    1: setPn\n  } = useState(1);\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(0);\n  const {\n    0: first,\n    1: setFirst\n  } = useState(true);\n\n  const init = (number, type) => {\n    http.get(`${url}?pn=${number || pn}&ps=${ps}${otherParam}`, data => {\n      const number = data.total % ps === 0 ? data.total / ps : Math.ceil(data.total / ps);\n      setTotalPage(number);\n      setGridData(type === 'concat' ? gridData.concat(data.rows) : data.rows);\n    });\n  };\n\n  useEffect(() => {\n    isShow && init();\n  }, []);\n  useEffect(() => {\n    if (first) {\n      setFirst(false);\n    } else {\n      setPn(1);\n      init(1);\n    }\n  }, [otherParam]);\n\n  const handleNextPage = () => {\n    setPn(pn + 1);\n    init(pn + 1, 'concat');\n  };\n\n  return __jsx(Box, null, gridData.map(item => __jsx(GridList, {\n    key: item._id\n  }, __jsx(\"div\", {\n    className: \"rs-h5-grid-title\"\n  }, columns[0].title, \" # \", columns[0].render(item[columns[0].dataIndex], item)), columns.slice(1).map(col => col.h5 ? __jsx(\"div\", {\n    className: \"rs-h5-table-li\",\n    key: col.dataIndex\n  }, __jsx(\"span\", null, col.title, \":\"), __jsx(\"p\", null, col.render(item[col.dataIndex], item))) : ''))), gridData.length === 0 && __jsx(_Empty, {\n    style: {\n      paddingTop: 20\n    }\n  }), totalPage !== 0 && pn < totalPage && __jsx(\"div\", {\n    className: \"next-page\",\n    onClick: () => handleNextPage()\n  }, intl.messages.lang63));\n});\nconst Box = Styled.div.withConfig({\n  displayName: \"Grid-h5__Box\",\n  componentId: \"sc-1jk98l4-0\"\n})([\"padding-bottom:30px;.next-page{margin-top:20px;text-align:center;color:#1890ff;height:50px;line-height:50px;font-size:16px;}\"]);\nconst GridList = Styled.div.withConfig({\n  displayName: \"Grid-h5__GridList\",\n  componentId: \"sc-1jk98l4-1\"\n})([\"box-shadow:0 0 8px 0 hsla(0,0%,40%,.11);background:#fff;padding:10px;margin-bottom:10px;border-radius:6px;.rs-h5-grid-title{height:30px;line-height:30px;border-bottom:1px solid #eee;margin-bottom:10px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;}.rs-h5-table-li{display:flex;line-height:25px;> span{text-align:right;color:rgb(119,130,177);padding-right:10px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;}p{flex:1;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;margin:0;}}\"]);\nexport default GridH5;","map":{"version":3,"sources":["/Users/libaozhong/cr/ccm-front/components/table/Grid-h5.js"],"names":["useState","useEffect","useLayoutEffect","React","Component","Styled","http","injectIntl","GridH5","url","columns","otherParam","isShow","intl","gridData","setGridData","ps","pn","setPn","totalPage","setTotalPage","first","setFirst","init","number","type","get","data","total","Math","ceil","concat","rows","handleNextPage","map","item","_id","title","render","dataIndex","slice","col","h5","length","paddingTop","messages","lang63","Box","div","GridList"],"mappings":"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","sourcesContent":["import { useState, useEffect, useLayoutEffect } from 'react'\nimport React, { Component } from 'react'\nimport Styled from 'styled-components'\nimport http from '../../utils/http'\nimport { injectIntl } from 'react-intl'\nimport { Empty } from 'antd'\n\nconst GridH5 = injectIntl(({ url, columns, otherParam = '', isShow, intl }) => {\n  const [gridData, setGridData] = useState([])\n  const ps = 6\n  const [pn, setPn] = useState(1)\n  const [totalPage, setTotalPage] = useState(0)\n  const [first, setFirst] = useState(true)\n\n  const init = (number, type) => {\n    http.get(`${url}?pn=${number || pn}&ps=${ps}${otherParam}`, (data) => {\n      const number = data.total % ps === 0 ? data.total / ps : Math.ceil(data.total / ps)\n      setTotalPage(number)\n      setGridData(type === 'concat' ? gridData.concat(data.rows) : data.rows)\n    })\n  }\n\n  useEffect(() => {\n    isShow && init()\n  }, [])\n\n  useEffect(() => {\n    if (first) {\n      setFirst(false)\n    } else {\n      setPn(1)\n      init(1)\n    }\n  }, [otherParam])\n\n  const handleNextPage = () => {\n    setPn(pn + 1)\n    init(pn + 1, 'concat')\n  }\n\n  return (\n    <Box>\n      {gridData.map((item) => (\n        <GridList key={item._id}>\n          <div className=\"rs-h5-grid-title\">\n            {columns[0].title} # {columns[0].render(item[columns[0].dataIndex], item)}\n          </div>\n          {columns.slice(1).map((col) =>\n            col.h5 ? (\n              <div className=\"rs-h5-table-li\" key={col.dataIndex}>\n                <span>{col.title}:</span>\n                <p>{col.render(item[col.dataIndex], item)}</p>\n              </div>\n            ) : (\n              ''\n            )\n          )}\n        </GridList>\n      ))}\n      {gridData.length === 0 && <Empty style={{ paddingTop: 20 }} />}\n      {totalPage !== 0 && pn < totalPage && (\n        <div className=\"next-page\" onClick={() => handleNextPage()}>\n          {intl.messages.lang63}\n        </div>\n      )}\n    </Box>\n  )\n})\nconst Box = Styled.div`\n  padding-bottom:30px;\n  .next-page{\n    margin-top: 20px;\n    text-align: center;\n    color: #1890ff;\n    height: 50px;\n    line-height: 50px;\n    font-size: 16px;\n  }\n`\nconst GridList = Styled.div`\n  box-shadow: 0 0 8px 0 hsla(0,0%,40%,.11);\n  background:#fff;\n  padding: 10px;\n  margin-bottom:10px;\n  border-radius: 6px;\n  .rs-h5-grid-title{\n    height:30px;\n    line-height: 30px;\n    border-bottom: 1px solid #eee;\n    margin-bottom: 10px;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n  .rs-h5-table-li{\n    display:flex;\n    line-height:25px;\n     > span{\n      text-align:right;\n      color:rgb(119, 130, 177);\n      padding-right:10px;\n      overflow: hidden;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n    }\n    p{\n      flex:1;\n      overflow: hidden;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n      margin:0;\n    }\n  }\n`\n\nexport default GridH5\n"]},"metadata":{},"sourceType":"module"}