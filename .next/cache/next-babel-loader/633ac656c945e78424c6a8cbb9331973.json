{"ast":null,"code":"import { dateid } from '../../utils/date';\nimport BizError, { AuthError, RouterNotFoundError, PermissionDeniedError } from './error';\nexport default ((handler, ...middles) => async (req, res) => {\n  try {\n    for (let i = 0; i < middles.length; i++) {\n      await eval(`${middles[i]}(req,res)`);\n    }\n\n    const result = await handler(req, res);\n    return result ? res.json(result) : res.end();\n  } catch (e) {\n    const date = dateid();\n    const code = getErrorStatus(e);\n    const message = e.message;\n    console.error(`ERROR_CODE: ${date}.${code} ${message}`);\n    console.error(e);\n    res.status(code).json({\n      date,\n      code,\n      message\n    });\n  }\n});\n\nconst getErrorStatus = e => {\n  let status;\n\n  if (e instanceof BizError) {\n    status = 400;\n  } else if (e instanceof AuthError) {\n    status = 401;\n  } else if (e instanceof PermissionDeniedError) {\n    status = 403;\n  } else if (e instanceof RouterNotFoundError) {\n    status = 404;\n  } else {\n    status = 500;\n  }\n\n  return status;\n};","map":null,"metadata":{},"sourceType":"module"}