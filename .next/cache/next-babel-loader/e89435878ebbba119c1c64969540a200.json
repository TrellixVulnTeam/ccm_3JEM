{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { Component } from 'react';\nimport http from '../../utils/http';\nimport { injectIntl } from 'react-intl';\n\nclass Grid extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      uploadLoading: false,\n      dataSource: [],\n      pagingConfig: props.pagination === false ? false : this.setPagination(props.pagination || {})\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.url && this.props.isShow) {\n      const {\n        current,\n        pageSize\n      } = this.state.pagingConfig;\n      pageSize ? this.queryListByPaging(current, pageSize) : this.queryList();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      url,\n      search,\n      otherParam\n    } = this.props;\n\n    if (prevProps.search !== search && url || prevProps.otherParam !== otherParam && url || prevProps.url !== url) {\n      const {\n        pageSize\n      } = this.state.pagingConfig;\n      pageSize ? this.queryListByPaging(1, pageSize) : this.queryList();\n    }\n  }\n\n  setPagination(data) {\n    const {\n      onChange,\n      onShowSizeChange\n    } = data;\n    const {\n      intl\n    } = this.props;\n    return Object.assign({\n      showSizeChanger: true,\n      showQuickJumper: true,\n      pageSize: 10,\n      current: 1,\n      showTotal: (total, range) => `${intl.messages.lang59}${total}${intl.messages.lang60}${range[0]}-${range[1]}${intl.messages.lang61}`\n    }, data, {\n      onChange: (current, pageSize) => this.queryListByPaging(current, pageSize).then(() => onChange === null || onChange === void 0 ? void 0 : onChange(current, pageSize)),\n      onShowSizeChange: (current, pageSize) => this.queryListByPaging(current, pageSize).then(() => onShowSizeChange === null || onShowSizeChange === void 0 ? void 0 : onShowSizeChange(current, pageSize))\n    });\n  }\n\n  queryListByPaging(pn, ps) {\n    this.setState({\n      loading: true\n    });\n    const {\n      url,\n      search,\n      otherParam\n    } = this.props;\n    return http.get(`${url}?pn=${pn}&ps=${ps}${otherParam || ''}`, ({\n      rows,\n      total\n    }) => {\n      this.setState({\n        loading: false,\n        dataSource: rows,\n        pagingConfig: Object.assign({}, this.state.pagingConfig, {\n          current: pn,\n          pageSize: ps,\n          total\n        })\n      });\n    });\n  } // 自定义 otherParam 为对象\n\n\n  queryList() {\n    this.setState({\n      loading: true\n    });\n    const {\n      url,\n      search,\n      otherParam\n    } = this.props;\n    return http.get(url, {\n      params: Object.assign(search, otherParam)\n    }, data => {\n      this.setState({\n        loading: false,\n        dataSource: data\n      });\n    });\n  } // 若存在复选框，获取选中数据\n\n\n  getSelectedData() {// return this.state.selectedList;\n  }\n\n  refreshGrid(isCurrent) {\n    const {\n      current,\n      pageSize\n    } = this.state.pagingConfig;\n    pageSize ? this.queryListByPaging(isCurrent ? current : 1, pageSize) : this.queryList();\n  }\n\n  render() {\n    const {\n      loading,\n      dataSource,\n      pagingConfig\n    } = this.state;\n\n    const _this$props = this.props,\n          {\n      url,\n      search,\n      pagination,\n      className\n    } = _this$props,\n          params = _objectWithoutProperties(_this$props, [\"url\", \"search\", \"pagination\", \"className\"]);\n\n    return __jsx(_Table, _extends({\n      className: \"mx-grid\",\n      rowKey: \"_id\",\n      loading: loading,\n      pagination: pagingConfig,\n      dataSource: dataSource\n    }, params));\n  }\n\n}\n\nexport default injectIntl(Grid);","map":{"version":3,"sources":["/Users/libaozhong/cr/ccm-front/components/table/Grid-web.js"],"names":["React","Component","http","injectIntl","Grid","constructor","props","state","loading","uploadLoading","dataSource","pagingConfig","pagination","setPagination","componentDidMount","url","isShow","current","pageSize","queryListByPaging","queryList","componentDidUpdate","prevProps","search","otherParam","data","onChange","onShowSizeChange","intl","Object","assign","showSizeChanger","showQuickJumper","showTotal","total","range","messages","lang59","lang60","lang61","then","pn","ps","setState","get","rows","params","getSelectedData","refreshGrid","isCurrent","render","className"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Table } from 'antd'\nimport http from '../../utils/http'\nimport { injectIntl } from 'react-intl'\n\nclass Grid extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: false,\n      uploadLoading: false,\n      dataSource: [],\n      pagingConfig: props.pagination === false ? false : this.setPagination(props.pagination || {})\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.url && this.props.isShow) {\n      const { current, pageSize } = this.state.pagingConfig\n      pageSize ? this.queryListByPaging(current, pageSize) : this.queryList()\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { url, search, otherParam } = this.props\n    if ((prevProps.search !== search && url) || (prevProps.otherParam !== otherParam && url) || prevProps.url !== url) {\n      const { pageSize } = this.state.pagingConfig\n      pageSize ? this.queryListByPaging(1, pageSize) : this.queryList()\n    }\n  }\n\n  setPagination(data) {\n    const { onChange, onShowSizeChange } = data\n    const { intl } = this.props\n    return Object.assign(\n      {\n        showSizeChanger: true,\n        showQuickJumper: true,\n        pageSize: 10,\n        current: 1,\n        showTotal: (total, range) => `${intl.messages.lang59}${total}${intl.messages.lang60}${range[0]}-${range[1]}${intl.messages.lang61}`\n      },\n      data,\n      {\n        onChange: (current, pageSize) => this.queryListByPaging(current, pageSize).then(() => onChange?.(current, pageSize)),\n        onShowSizeChange: (current, pageSize) => this.queryListByPaging(current, pageSize).then(() => onShowSizeChange?.(current, pageSize))\n      }\n    )\n  }\n\n  queryListByPaging(pn, ps) {\n    this.setState({ loading: true })\n    const { url, search, otherParam } = this.props\n    return http.get(`${url}?pn=${pn}&ps=${ps}${otherParam || ''}`, ({ rows, total }) => {\n      this.setState({\n        loading: false,\n        dataSource: rows,\n        pagingConfig: Object.assign({}, this.state.pagingConfig, {\n          current: pn,\n          pageSize: ps,\n          total\n        })\n      })\n    })\n  }\n\n  // 自定义 otherParam 为对象\n  queryList() {\n    this.setState({ loading: true })\n    const { url, search, otherParam } = this.props\n    return http.get(url, { params: Object.assign(search, otherParam) }, (data) => {\n      this.setState({\n        loading: false,\n        dataSource: data\n      })\n    })\n  }\n\n  // 若存在复选框，获取选中数据\n  getSelectedData() {\n    // return this.state.selectedList;\n  }\n\n  refreshGrid(isCurrent) {\n    const { current, pageSize } = this.state.pagingConfig\n    pageSize ? this.queryListByPaging(isCurrent ? current : 1, pageSize) : this.queryList()\n  }\n  render() {\n    const { loading, dataSource, pagingConfig } = this.state\n    const { url, search, pagination, className, ...params } = this.props\n    return <Table className=\"mx-grid\" rowKey=\"_id\" loading={loading} pagination={pagingConfig} dataSource={dataSource} {...params} />\n  }\n}\n\nexport default injectIntl(Grid)\n"]},"metadata":{},"sourceType":"module"}