{"ast":null,"code":"import Router from './core/router';\nimport { parseQueryString } from '../utils/common';\nimport web3 from './core/monitorWeb3';\nimport mongoose from 'mongoose';\nimport BizError from './core/error';\nconst {\n  Transaction,\n  TokenTransfer,\n  Contract,\n  Block\n} = mongoose.models;\nRouter.get('/trade', async ({\n  url\n}) => {\n  const param = parseQueryString(url);\n  const ps = parseInt(param.ps) || 10;\n  const pn = parseInt(param.pn) || 1;\n  const block = await Transaction.find({}).lean(true).sort({\n    blockNumber: -1\n  }).skip((pn - 1) * ps).limit(ps);\n  const total = await Transaction.find({}).count();\n  return {\n    rows: block,\n    total\n  };\n});\nRouter.get('/trade/hash/{hash}', async ({\n  params\n}) => {\n  let results = await Transaction.findOne({\n    hash: params.hash\n  });\n  const block = await Block.findOne().sort({\n    number: -1\n  }).limit(1);\n\n  if (!results) {\n    throw new BizError('hash Error');\n  }\n\n  results._doc.newBlockNumber = block === null || block === void 0 ? void 0 : block._doc.number;\n  const contract = await Contract.findOne({\n    address: results === null || results === void 0 ? void 0 : results._doc.to\n  });\n  results._doc.statusV = '0x37';\n\n  if (contract) {\n    var _tradeInfo$logs;\n\n    results._doc.statusV = '0x38';\n    const tokenTransfer = await TokenTransfer.findOne({\n      hash: params.hash\n    });\n    results._doc.realAddress = tokenTransfer === null || tokenTransfer === void 0 ? void 0 : tokenTransfer._doc.to;\n    const contract = await Contract.findOne({\n      address: results === null || results === void 0 ? void 0 : results._doc.to\n    });\n    results._doc.symbol = contract === null || contract === void 0 ? void 0 : contract._doc.symbol;\n    results._doc.decimals = contract === null || contract === void 0 ? void 0 : contract._doc.decimals;\n    const tradeInfo = await web3.eth.getTransactionReceipt(params.hash);\n    results._doc.isSuccess = !!(tradeInfo === null || tradeInfo === void 0 ? void 0 : (_tradeInfo$logs = tradeInfo.logs) === null || _tradeInfo$logs === void 0 ? void 0 : _tradeInfo$logs.length);\n  }\n\n  return results;\n});\nRouter.get('/trade/addr/{hash}', async ({\n  params\n}) => {\n  let results = await Transaction.findOne({\n    hash: params.hash\n  });\n\n  if ((results === null || results === void 0 ? void 0 : results._doc.v) === '0x38') {\n    const tokenTransfer = await TokenTransfer.findOne({\n      hash: params.hash\n    });\n    results._doc.realAddress = tokenTransfer === null || tokenTransfer === void 0 ? void 0 : tokenTransfer._doc.to;\n  }\n\n  return results;\n});\nRouter.get('/trade/number/{number}', async ({\n  params,\n  url\n}) => {\n  const param = parseQueryString(url);\n  const ps = parseInt(param.ps) || 10;\n  const pn = parseInt(param.pn) || 1;\n  const rows = await Transaction.find({\n    blockNumber: params.number\n  }).lean(true).sort({\n    blockNumber: -1\n  }).skip((pn - 1) * ps).limit(ps);\n  const total = await Transaction.find({\n    blockNumber: params.number\n  }).count();\n  return {\n    rows,\n    total\n  };\n});","map":{"version":3,"sources":["/Users/libaozhong/cr/ccm-front/api/trade.js"],"names":["Router","parseQueryString","web3","mongoose","BizError","Transaction","TokenTransfer","Contract","Block","models","get","url","param","ps","parseInt","pn","block","find","lean","sort","blockNumber","skip","limit","total","count","rows","params","results","findOne","hash","number","_doc","newBlockNumber","contract","address","to","statusV","tokenTransfer","realAddress","symbol","decimals","tradeInfo","eth","getTransactionReceipt","isSuccess","logs","length","v"],"mappings":"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","sourcesContent":["import Router from './core/router'\nimport { parseQueryString } from '../utils/common'\nimport web3 from './core/monitorWeb3'\nimport mongoose from 'mongoose'\nimport BizError from './core/error'\n\nconst { Transaction, TokenTransfer, Contract, Block } = mongoose.models\n\nRouter.get('/trade', async ({ url }) => {\n  const param = parseQueryString(url)\n  const ps = parseInt(param.ps) || 10\n  const pn = parseInt(param.pn) || 1\n  const block = await Transaction.find({})\n    .lean(true)\n    .sort({ blockNumber: -1 })\n    .skip((pn - 1) * ps)\n    .limit(ps)\n  const total = await Transaction.find({}).count()\n\n  return { rows: block, total }\n})\n\nRouter.get('/trade/hash/{hash}', async ({ params }) => {\n  let results = await Transaction.findOne({ hash: params.hash })\n  const block = await Block.findOne().sort({ number: -1 }).limit(1)\n  if (!results) {\n    throw new BizError('hash Error')\n  }\n\n  results._doc.newBlockNumber = block?._doc.number\n\n  const contract = await Contract.findOne({ address: results?._doc.to })\n  results._doc.statusV = '0x37'\n  if (contract) {\n    results._doc.statusV = '0x38'\n    const tokenTransfer = await TokenTransfer.findOne({ hash: params.hash })\n    results._doc.realAddress = tokenTransfer?._doc.to\n    const contract = await Contract.findOne({ address: results?._doc.to })\n    results._doc.symbol = contract?._doc.symbol\n    results._doc.decimals = contract?._doc.decimals\n    const tradeInfo = await web3.eth.getTransactionReceipt(params.hash)\n    results._doc.isSuccess = !!tradeInfo?.logs?.length\n  }\n  return results\n})\n\nRouter.get('/trade/addr/{hash}', async ({ params }) => {\n  let results = await Transaction.findOne({ hash: params.hash })\n  if (results?._doc.v === '0x38') {\n    const tokenTransfer = await TokenTransfer.findOne({ hash: params.hash })\n    results._doc.realAddress = tokenTransfer?._doc.to\n  }\n  return results\n})\n\nRouter.get('/trade/number/{number}', async ({ params, url }) => {\n  const param = parseQueryString(url)\n  const ps = parseInt(param.ps) || 10\n  const pn = parseInt(param.pn) || 1\n  const rows = await Transaction.find({ blockNumber: params.number })\n    .lean(true)\n    .sort({ blockNumber: -1 })\n    .skip((pn - 1) * ps)\n    .limit(ps)\n  const total = await Transaction.find({ blockNumber: params.number }).count()\n  return { rows, total }\n})\n"]},"metadata":{},"sourceType":"module"}