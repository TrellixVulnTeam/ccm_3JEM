{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport unfetch from 'isomorphic-unfetch';\nimport { getCookies } from './cookie';\nimport { dateid } from '../utils/date';\nvar errorTip = _message;\nexport var fetch = function fetch(url, ctx) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (!url.startsWith('http')) {\n    url = \"http://localhost:\".concat(process.cfg.server.port).concat(url);\n  }\n\n  return unfetch(url, params).then(function (response) {\n    if (response.ok) {\n      return response.text().then(jsonIt);\n    }\n\n    throw {\n      status: response.status,\n      response: response\n    };\n  })[\"catch\"](function (err) {\n    var status = err.status;\n    console.error(\"request api \".concat(url, \" status\\uFF1A\").concat(status, \" error\\uFF1A\"), err);\n\n    if (status === 401) {\n      ctx.res.writeHead(302, {\n        Location: '/login'\n      });\n    } else {\n      ctx.res.writeHead(status !== null && status !== void 0 ? status : 500);\n    }\n\n    ctx.res.end();\n  });\n};\n\nvar mkops = function mkops(method, data) {\n  var payload = {\n    method: method,\n    headers: {}\n  };\n\n  if (method !== 'GET') {\n    payload.headers['Content-Type'] = 'application/json; charset=utf-8';\n\n    if (method !== 'DELETE') {\n      payload.body = JSON.stringify(data || {});\n    }\n  }\n\n  return payload;\n};\n\nvar jsonIt = function jsonIt(d) {\n  try {\n    return JSON.parse(d);\n  } catch (e) {\n    return {\n      code: 600,\n      message: e.message,\n      text: d\n    };\n  }\n};\n\nvar send = function send(url, options, success, error) {\n  return unfetch(url, options).then(function _callee(response) {\n    var data, _data;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!response.ok) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(response.text().then(jsonIt));\n\n          case 3:\n            data = _context.sent;\n            success === null || success === void 0 ? void 0 : success(data);\n            return _context.abrupt(\"return\", Promise.resolve(data));\n\n          case 8:\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(response.text().then(jsonIt));\n\n          case 10:\n            _data = _context.sent;\n\n            if (!(_data.code === 600)) {\n              _context.next = 15;\n              break;\n            }\n\n            throw {\n              code: response.status,\n              message: response.statusText,\n              date: dateid()\n            };\n\n          case 15:\n            throw _data;\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  })[\"catch\"](function _callee2(err) {\n    var date, code, message;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(err);\n            date = err.date, code = err.code, message = err.message;\n\n            if (!error) {\n              _context2.next = 5;\n              break;\n            }\n\n            error(err);\n            return _context2.abrupt(\"return\");\n\n          case 5:\n            if (code == 400) {\n              errorTip.error(message);\n            } else if (code === 401) {\n              location.href = '/login';\n            } else if (code == 500) {\n              errorTip.error(\"\".concat(date, \".\").concat(code, \" Server Error\"));\n            } else if ((code / 100 | 0) == 5) {\n              errorTip.error('Server Error');\n            } else if (code) {\n              errorTip.error(\"\".concat(date, \".\").concat(code, \" Server Error\"));\n            } else {\n              errorTip.error(\"\".concat(dateid(), \".604 Server Error\"));\n            }\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  });\n};\n\nexport default {\n  get: function get(url, success, error) {\n    return send(url, mkops('GET'), success, error);\n  },\n  post: function post(url, data, success, error) {\n    return send(url, mkops('POST', data), success, error);\n  },\n  patch: function patch(url, data, success, error) {\n    return send(url, mkops('PATCH', data), success, error);\n  },\n  put: function put(url, data, success, error) {\n    return send(url, mkops('PUT', data), success, error);\n  },\n  \"delete\": function _delete(url, success, error) {\n    return send(url, mkops('DELETE'), success, error);\n  }\n};","map":{"version":3,"sources":["/Users/libaozhong/cr/ccm-front/utils/http.js"],"names":["unfetch","getCookies","dateid","errorTip","fetch","url","ctx","params","startsWith","process","cfg","server","port","then","response","ok","text","jsonIt","status","err","console","error","res","writeHead","Location","end","mkops","method","data","payload","headers","body","JSON","stringify","d","parse","e","code","message","send","options","success","Promise","resolve","statusText","date","log","location","href","get","post","patch","put"],"mappings":"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","sourcesContent":["import unfetch from 'isomorphic-unfetch'\nimport { getCookies } from './cookie'\nimport { dateid } from '../utils/date'\nimport { message } from 'antd'\n\nconst errorTip = message\n\nexport const fetch = (url, ctx, params = {}) => {\n  if (!url.startsWith('http')) {\n    url = `http://localhost:${process.cfg.server.port}${url}`\n  }\n\n  return unfetch(url, params)\n    .then((response) => {\n      if (response.ok) {\n        return response.text().then(jsonIt)\n      }\n      throw { status: response.status, response }\n    })\n    .catch((err) => {\n      const { status } = err\n      console.error(`request api ${url} status：${status} error：`, err)\n      if (status === 401) {\n        ctx.res.writeHead(302, { Location: '/login' })\n      } else {\n        ctx.res.writeHead(status ?? 500)\n      }\n      ctx.res.end()\n    })\n}\n\nconst mkops = (method, data) => {\n  let payload = {\n    method,\n    headers: {}\n  }\n  if (method !== 'GET') {\n    payload.headers['Content-Type'] = 'application/json; charset=utf-8'\n    if (method !== 'DELETE') {\n      payload.body = JSON.stringify(data || {})\n    }\n  }\n  return payload\n}\n\nconst jsonIt = (d) => {\n  try {\n    return JSON.parse(d)\n  } catch (e) {\n    return { code: 600, message: e.message, text: d }\n  }\n}\n\nconst send = (url, options, success, error) => {\n  return unfetch(url, options)\n    .then(async (response) => {\n      if (response.ok) {\n        const data = await response.text().then(jsonIt)\n        success?.(data)\n        return Promise.resolve(data)\n      } else {\n        const data = await response.text().then(jsonIt)\n        if (data.code === 600) {\n          throw {\n            code: response.status,\n            message: response.statusText,\n            date: dateid()\n          }\n        } else {\n          throw data\n        }\n      }\n    })\n    .catch(async (err) => {\n      console.log(err)\n      const { date, code, message } = err\n      if (error) {\n        error(err)\n        return\n      }\n      if (code == 400) {\n        errorTip.error(message)\n      } else if (code === 401) {\n        location.href = '/login'\n      } else if (code == 500) {\n        errorTip.error(`${date}.${code} Server Error`)\n      } else if (((code / 100) | 0) == 5) {\n        errorTip.error('Server Error')\n      } else if (code) {\n        errorTip.error(`${date}.${code} Server Error`)\n      } else {\n        errorTip.error(`${dateid()}.604 Server Error`)\n      }\n    })\n}\n\nexport default {\n  get: (url, success, error) => {\n    return send(url, mkops('GET'), success, error)\n  },\n  post: (url, data, success, error) => {\n    return send(url, mkops('POST', data), success, error)\n  },\n  patch: (url, data, success, error) => {\n    return send(url, mkops('PATCH', data), success, error)\n  },\n  put: (url, data, success, error) => {\n    return send(url, mkops('PUT', data), success, error)\n  },\n  delete: (url, success, error) => {\n    return send(url, mkops('DELETE'), success, error)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}