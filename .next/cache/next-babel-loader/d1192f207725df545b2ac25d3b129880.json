{"ast":null,"code":"import { dateid } from '../../utils/date';\nimport BizError, { AuthError, RouterNotFoundError, PermissionDeniedError } from './error';\nexport default ((handler, ...middles) => async (req, res) => {\n  try {\n    for (let i = 0; i < middles.length; i++) {\n      await eval(`${middles[i]}(req,res)`);\n    }\n\n    const result = await handler(req, res);\n    return result ? res.json(result) : res.end();\n  } catch (e) {\n    const date = dateid();\n    const code = getErrorStatus(e);\n    const message = e.message;\n    console.error(`ERROR_CODE: ${date}.${code} ${message}`);\n    console.error(e);\n    res.status(code).json({\n      date,\n      code,\n      message\n    });\n  }\n});\n\nconst getErrorStatus = e => {\n  let status;\n\n  if (e instanceof BizError) {\n    status = 400;\n  } else if (e instanceof AuthError) {\n    status = 401;\n  } else if (e instanceof PermissionDeniedError) {\n    status = 403;\n  } else if (e instanceof RouterNotFoundError) {\n    status = 404;\n  } else {\n    status = 500;\n  }\n\n  return status;\n};","map":{"version":3,"sources":["/Users/libaozhong/cr/ccm-front/api/core/middleware.js"],"names":["dateid","BizError","AuthError","RouterNotFoundError","PermissionDeniedError","handler","middles","req","res","i","length","eval","result","json","end","e","date","code","getErrorStatus","message","console","error","status"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,OAAOC,QAAP,IACEC,SADF,EAEEC,mBAFF,EAGEC,qBAHF,QAIO,SAJP;AAMA,gBAAe,CAACC,OAAD,EAAU,GAAGC,OAAb,KAAyB,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC1D,MAAI;AACF,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAAO,CAACI,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,YAAME,IAAI,CAAE,GAAEL,OAAO,CAACG,CAAD,CAAI,WAAf,CAAV;AACD;;AACD,UAAMG,MAAM,GAAG,MAAMP,OAAO,CAACE,GAAD,EAAMC,GAAN,CAA5B;AACA,WAAOI,MAAM,GAAGJ,GAAG,CAACK,IAAJ,CAASD,MAAT,CAAH,GAAsBJ,GAAG,CAACM,GAAJ,EAAnC;AACD,GAND,CAME,OAAOC,CAAP,EAAU;AACV,UAAMC,IAAI,GAAGhB,MAAM,EAAnB;AACA,UAAMiB,IAAI,GAAGC,cAAc,CAACH,CAAD,CAA3B;AACA,UAAMI,OAAO,GAAGJ,CAAC,CAACI,OAAlB;AACAC,IAAAA,OAAO,CAACC,KAAR,CAAe,eAAcL,IAAK,IAAGC,IAAK,IAAGE,OAAQ,EAArD;AACAC,IAAAA,OAAO,CAACC,KAAR,CAAcN,CAAd;AACAP,IAAAA,GAAG,CAACc,MAAJ,CAAWL,IAAX,EAAiBJ,IAAjB,CAAsB;AAAEG,MAAAA,IAAF;AAAQC,MAAAA,IAAR;AAAcE,MAAAA;AAAd,KAAtB;AACD;AACF,CAfD;;AAiBA,MAAMD,cAAc,GAAIH,CAAD,IAAO;AAC5B,MAAIO,MAAJ;;AACA,MAAIP,CAAC,YAAYd,QAAjB,EAA2B;AACzBqB,IAAAA,MAAM,GAAG,GAAT;AACD,GAFD,MAEO,IAAIP,CAAC,YAAYb,SAAjB,EAA4B;AACjCoB,IAAAA,MAAM,GAAG,GAAT;AACD,GAFM,MAEA,IAAIP,CAAC,YAAYX,qBAAjB,EAAwC;AAC7CkB,IAAAA,MAAM,GAAG,GAAT;AACD,GAFM,MAEA,IAAIP,CAAC,YAAYZ,mBAAjB,EAAsC;AAC3CmB,IAAAA,MAAM,GAAG,GAAT;AACD,GAFM,MAEA;AACLA,IAAAA,MAAM,GAAG,GAAT;AACD;;AACD,SAAOA,MAAP;AACD,CAdD","sourcesContent":["import { dateid } from '../../utils/date';\nimport BizError, {\n  AuthError,\n  RouterNotFoundError,\n  PermissionDeniedError,\n} from './error';\n\nexport default (handler, ...middles) => async (req, res) => {\n  try {\n    for (let i = 0; i < middles.length; i++) {\n      await eval(`${middles[i]}(req,res)`);\n    }\n    const result = await handler(req, res);\n    return result ? res.json(result) : res.end();\n  } catch (e) {\n    const date = dateid();\n    const code = getErrorStatus(e);\n    const message = e.message;\n    console.error(`ERROR_CODE: ${date}.${code} ${message}`);\n    console.error(e);\n    res.status(code).json({ date, code, message });\n  }\n};\n\nconst getErrorStatus = (e) => {\n  let status;\n  if (e instanceof BizError) {\n    status = 400;\n  } else if (e instanceof AuthError) {\n    status = 401;\n  } else if (e instanceof PermissionDeniedError) {\n    status = 403;\n  } else if (e instanceof RouterNotFoundError) {\n    status = 404;\n  } else {\n    status = 500;\n  }\n  return status;\n};\n"]},"metadata":{},"sourceType":"module"}