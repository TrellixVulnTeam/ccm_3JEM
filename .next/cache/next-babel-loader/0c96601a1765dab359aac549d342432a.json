{"ast":null,"code":"import Router from './core/router';\nimport web3 from './core/monitorWeb3';\nimport BigNumber from 'bignumber.js';\nimport { parseQueryString } from '../utils/common';\nconst contractabi = [{\n  constant: true,\n  inputs: [{\n    name: '_owner',\n    type: 'address'\n  }],\n  name: 'balanceOf',\n  outputs: [{\n    name: 'balance',\n    type: 'uint256'\n  }],\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'decimals',\n  outputs: [{\n    name: '',\n    type: 'uint8'\n  }],\n  type: 'function'\n}];\nRouter.get('/addr/token/balance', async ({\n  url\n}) => {\n  const param = parseQueryString(url);\n  const {\n    address,\n    contractaddress,\n    decimals\n  } = param;\n  const contractother = web3.eth.Contract(contractabi, contractaddress);\n  const balance = await contractother.methods.balanceOf(address).call();\n\n  if (balance) {\n    const Ether = new BigNumber(`10e${decimals !== undefined ? decimals - 1 : 17}`);\n    let ret = new BigNumber(balance);\n    const data = ret.dividedBy(Ether);\n    return data;\n  } else {\n    return '';\n  }\n});","map":{"version":3,"sources":["/Users/libaozhong/cr/ccm-front/api/balance.js"],"names":["Router","web3","BigNumber","parseQueryString","contractabi","constant","inputs","name","type","outputs","get","url","param","address","contractaddress","decimals","contractother","eth","Contract","balance","methods","balanceOf","call","Ether","undefined","ret","data","dividedBy"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,eAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AAEA,MAAMC,WAAW,GAAG,CAClB;AACEC,EAAAA,QAAQ,EAAE,IADZ;AAEEC,EAAAA,MAAM,EAAE,CAAC;AAAEC,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,IAAI,EAAE;AAAxB,GAAD,CAFV;AAGED,EAAAA,IAAI,EAAE,WAHR;AAIEE,EAAAA,OAAO,EAAE,CAAC;AAAEF,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,IAAI,EAAE;AAAzB,GAAD,CAJX;AAKEA,EAAAA,IAAI,EAAE;AALR,CADkB,EAQlB;AACEH,EAAAA,QAAQ,EAAE,IADZ;AAEEC,EAAAA,MAAM,EAAE,EAFV;AAGEC,EAAAA,IAAI,EAAE,UAHR;AAIEE,EAAAA,OAAO,EAAE,CAAC;AAAEF,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,IAAI,EAAE;AAAlB,GAAD,CAJX;AAKEA,EAAAA,IAAI,EAAE;AALR,CARkB,CAApB;AAiBAR,MAAM,CAACU,GAAP,CAAW,qBAAX,EAAkC,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAmB;AACnD,QAAMC,KAAK,GAAGT,gBAAgB,CAACQ,GAAD,CAA9B;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,eAAX;AAA4BC,IAAAA;AAA5B,MAAyCH,KAA/C;AACA,QAAMI,aAAa,GAAGf,IAAI,CAACgB,GAAL,CAASC,QAAT,CAAkBd,WAAlB,EAA+BU,eAA/B,CAAtB;AACA,QAAMK,OAAO,GAAG,MAAMH,aAAa,CAACI,OAAd,CAAsBC,SAAtB,CAAgCR,OAAhC,EAAyCS,IAAzC,EAAtB;;AACA,MAAIH,OAAJ,EAAa;AACX,UAAMI,KAAK,GAAG,IAAIrB,SAAJ,CAAe,MAAKa,QAAQ,KAAKS,SAAb,GAAyBT,QAAQ,GAAG,CAApC,GAAwC,EAAG,EAA/D,CAAd;AACA,QAAIU,GAAG,GAAG,IAAIvB,SAAJ,CAAciB,OAAd,CAAV;AACA,UAAMO,IAAI,GAAGD,GAAG,CAACE,SAAJ,CAAcJ,KAAd,CAAb;AACA,WAAOG,IAAP;AACD,GALD,MAKO;AACL,WAAO,EAAP;AACD;AACF,CAbD","sourcesContent":["import Router from './core/router'\nimport web3 from './core/monitorWeb3'\nimport BigNumber from 'bignumber.js'\nimport { parseQueryString } from '../utils/common'\n\nconst contractabi = [\n  {\n    constant: true,\n    inputs: [{ name: '_owner', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: 'balance', type: 'uint256' }],\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'decimals',\n    outputs: [{ name: '', type: 'uint8' }],\n    type: 'function'\n  }\n]\n\nRouter.get('/addr/token/balance', async ({ url }) => {\n  const param = parseQueryString(url)\n  const { address, contractaddress, decimals } = param\n  const contractother = web3.eth.Contract(contractabi, contractaddress)\n  const balance = await contractother.methods.balanceOf(address).call()\n  if (balance) {\n    const Ether = new BigNumber(`10e${decimals !== undefined ? decimals - 1 : 17}`)\n    let ret = new BigNumber(balance)\n    const data = ret.dividedBy(Ether)\n    return data\n  } else {\n    return ''\n  }\n})\n"]},"metadata":{},"sourceType":"module"}