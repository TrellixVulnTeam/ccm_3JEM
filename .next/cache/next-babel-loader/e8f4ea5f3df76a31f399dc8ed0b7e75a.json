{"ast":null,"code":"import Router from './core/router';\nimport { parseQueryString, handleAllTrade } from '../utils/common';\nimport mongoose from 'mongoose';\nconst {\n  Contract,\n  TokenTransfer,\n  Transaction\n} = mongoose.models;\nRouter.get('/receiver/info/{addr}', async ({\n  params\n}) => {\n  const contract = await Contract.findOne({\n    address: params.addr\n  });\n  return contract;\n});\nRouter.get('/receiver/list/{addr}', async ({\n  params,\n  url\n}) => {\n  const paramQuery = parseQueryString(url);\n  const ps = parseInt(paramQuery.ps) || 10;\n  const pn = parseInt(paramQuery.pn) || 1;\n  const total = await Transaction.find(handleAllTrade(paramQuery.trade, params.addr)).count();\n  let tokenTransfer = await Transaction.find(handleAllTrade(paramQuery.trade, params.addr)).sort({\n    blockNumber: -1\n  }).skip((pn - 1) * ps).limit(ps);\n  const list = await Promise.all(tokenTransfer.map(async item => {\n    return await Contract.findOne({\n      address: item.to\n    });\n  }));\n  tokenTransfer.forEach(item => {\n    const contract = list.find(li => item.to.toUpperCase() === li.address.toUpperCase());\n    item._doc.symbol = contract.symbol;\n    item._doc.decimals = contract.decimals;\n  });\n  return {\n    total,\n    rows: tokenTransfer\n  };\n});","map":null,"metadata":{},"sourceType":"module"}