{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useReducer } from 'react';\n\nconst renderInitalState = mobile => {\n  return {\n    window: mobile ? 400 : 1200\n  };\n};\n\nexport const MyContext = React.createContext();\nexport function reducer(state, action) {\n  const data = action.data;\n\n  switch (action.type) {\n    case 'SET_WINDOW':\n      return _objectSpread({}, state, {\n        window: data\n      });\n\n    default:\n      return state;\n  }\n}\n\nconst ContextProvider = props => {\n  const {\n    mobile\n  } = props;\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, renderInitalState(mobile));\n  return __jsx(MyContext.Provider, {\n    value: {\n      state,\n      dispatch\n    }\n  }, props.children);\n};\n\nexport default ContextProvider;","map":{"version":3,"sources":["/Users/libaozhong/cr/ccm-front/reducer/index.js"],"names":["React","useReducer","renderInitalState","mobile","window","MyContext","createContext","reducer","state","action","data","type","ContextProvider","props","dispatch","children"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;AAEA,MAAMC,iBAAiB,GAAIC,MAAD,IAAY;AACpC,SAAO;AACLC,IAAAA,MAAM,EAAED,MAAM,GAAG,GAAH,GAAS;AADlB,GAAP;AAGD,CAJD;;AAMA,OAAO,MAAME,SAAS,GAAGL,KAAK,CAACM,aAAN,EAAlB;AAEP,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AACrC,QAAMC,IAAI,GAAGD,MAAM,CAACC,IAApB;;AACA,UAAQD,MAAM,CAACE,IAAf;AACE,SAAK,YAAL;AACE,+BAAYH,KAAZ;AAAmBJ,QAAAA,MAAM,EAAEM;AAA3B;;AACF;AACE,aAAOF,KAAP;AAJJ;AAMD;;AAED,MAAMI,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAM;AAAEV,IAAAA;AAAF,MAAaU,KAAnB;AACA,QAAM;AAAA,OAACL,KAAD;AAAA,OAAQM;AAAR,MAAoBb,UAAU,CAACM,OAAD,EAAUL,iBAAiB,CAACC,MAAD,CAA3B,CAApC;AACA,SAAO,MAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAE;AAAEK,MAAAA,KAAF;AAASM,MAAAA;AAAT;AAA3B,KAAiDD,KAAK,CAACE,QAAvD,CAAP;AACD,CAJD;;AAKA,eAAeH,eAAf","sourcesContent":["import React, { useReducer } from 'react'\n\nconst renderInitalState = (mobile) => {\n  return {\n    window: mobile ? 400 : 1200\n  }\n}\n\nexport const MyContext = React.createContext()\n\nexport function reducer(state, action) {\n  const data = action.data\n  switch (action.type) {\n    case 'SET_WINDOW':\n      return { ...state, window: data }\n    default:\n      return state\n  }\n}\n\nconst ContextProvider = (props) => {\n  const { mobile } = props\n  const [state, dispatch] = useReducer(reducer, renderInitalState(mobile))\n  return <MyContext.Provider value={{ state, dispatch }}>{props.children}</MyContext.Provider>\n}\nexport default ContextProvider\n"]},"metadata":{},"sourceType":"module"}