{"ast":null,"code":"import PermissionDeniedError from '../api/core/error';\nimport RLP from 'rlp';\nimport BigNumber from 'bignumber.js';\nimport etherUnits from '../lib/etherUnits';\n\nconst hex2ascii = hexIn => {\n  const hex = hexIn.toString();\n  let str = '';\n\n  try {\n    const ba = RLP.decode(hex);\n    const test = ba[1].toString('ascii');\n\n    if (test == 'geth' || test == 'Parity') {\n      // FIXME\n      ba[0] = ba[0].toString('hex');\n    }\n\n    str = baToString(ba);\n  } catch (e) {\n    for (let i = 0; i < hex.length; i += 2) str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n  }\n\n  return str;\n}; // 日期转换\n\n\nexport const formatDate = date => {\n  date = new Date(date);\n  const y = date.getFullYear();\n  let m = date.getMonth() + 1;\n  let d = date.getDate();\n  const h = date.getHours();\n  let m1 = date.getMinutes();\n  m1 < 10 && (m1 = '0' + m1);\n  m = m < 10 ? '0' + m : m;\n  d = d < 10 ? '0' + d : d;\n  return y + '-' + m + '-' + d + ' ' + h + ':' + m1;\n};\nexport const getDayName = serTime => {\n  let td = new Date();\n  td = new Date(td.getFullYear(), td.getMonth(), td.getDate());\n  let od = new Date(serTime.replace(/-/g, '/'));\n  od = new Date(od.getFullYear(), od.getMonth(), od.getDate());\n  const xc = (od - td) / 1000 / 60 / 60 / 24;\n\n  if (xc < -2) {\n    return `${-xc}天前`;\n  } else if (xc < -1) {\n    return '前天';\n  } else if (xc < 0) {\n    return '昨天';\n  } else if (xc === 0) {\n    return '今天';\n  } else if (xc < 2) {\n    return '明天';\n  } else if (xc < 3) {\n    return '后天';\n  } else {\n    return `${xc}天后`;\n  }\n};\nexport const parseQueryString = url => {\n  const obj = {};\n  const str = url.substr(url.indexOf('?') + 1);\n  const arr = str.split('&');\n\n  for (let i = 0; i < arr.length; i++) {\n    const arr2 = arr[i].split('=');\n    obj[arr2[0]] = arr2[1];\n  }\n\n  return obj;\n};\nexport const colorRgb = sColor => {\n  //十六进制颜色值的正则表达式\n  const reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/; // 如果是16进制颜色\n\n  if (sColor && reg.test(sColor)) {\n    if (sColor.length === 4) {\n      let sColorNew = '#';\n\n      for (let i = 1; i < 4; i += 1) {\n        sColorNew += sColor.slice(i, i + 1).concat(sColor.slice(i, i + 1));\n      }\n\n      sColor = sColorNew;\n    } //处理六位的颜色值\n\n\n    let sColorChange = [];\n\n    for (let i = 1; i < 7; i += 2) {\n      sColorChange.push(parseInt('0x' + sColor.slice(i, i + 2)));\n    }\n\n    return sColorChange.join(',');\n  }\n\n  return '255,255,255';\n};\nexport const authenticationAdmin = user => {\n  if (!user.admin) {\n    throw new PermissionDeniedError('抱歉，请使用管理员账号登陆');\n  }\n\n  return true;\n};\nexport const compare = property => {\n  return (a, b) => {\n    return b[property] - a[property];\n  };\n};\n/* make blocks human readable */\n\nexport const filterBlocks = blocks => {\n  if (blocks.constructor !== Array) {\n    const b = blocks;\n    const ascii = hex2ascii(blocks.extraData);\n    b.extraDataHex = blocks.extraData;\n    b.extraData = ascii;\n    return b;\n  }\n\n  return blocks.map(block => {\n    const b = block;\n    const ascii = hex2ascii(block.extraData);\n    b.extraDataHex = block.extraData;\n    b.extraData = ascii;\n    return b;\n  });\n};\nexport const filterTrace = (txs, value) => {\n  return txs.map(tx => {\n    const t = tx;\n\n    if (t.type == 'suicide') {\n      if (t.action.address) t.from = t.action.address;\n      if (t.action.balance) t.value = etherUnits.toEther(new BigNumber(t.action.balance), 'wei');\n      if (t.action.refundAddress) t.to = t.action.refundAddress;\n    } else {\n      if (t.action.to) t.to = t.action.to;\n      t.from = t.action.from;\n      if (t.action.gas) t.gas = new BigNumber(t.action.gas).toNumber();\n      if (t.result && t.result.gasUsed) t.gasUsed = new BigNumber(t.result.gasUsed).toNumber();\n      if (t.result && t.result.address) t.to = t.result.address;\n      t.value = etherUnits.toEther(new BigNumber(t.action.value), 'wei');\n    }\n\n    return t;\n  });\n}; // 千分位\n\nexport const formatDataNumber = num => {\n  num += '';\n  if (!num.includes('.')) num += '.';\n  return num.replace(/(\\d)(?=(\\d{3})+\\.)/g, function ($0, $1) {\n    return $1 + ',';\n  }).replace(/\\.$/, '');\n};\nexport const handleGetFee = (price, number) => {\n  if (!price) {\n    return false;\n  }\n\n  const priceStr = price.toString();\n  const priceLen = priceStr.length;\n\n  if (priceLen > number) {\n    if (number === 0) {\n      return formatDataNumber(priceStr);\n    } else {\n      const pointNumber = priceLen - number;\n\n      if (pointNumber >= 10) {\n        return formatDataNumber(priceStr.substring(0, pointNumber));\n      } else {\n        const feeArr = priceStr.split('');\n        feeArr.splice(priceLen - number, 0, '.');\n        return formatDataNumber(feeArr.join('').substr(0, feeArr[9] === '.' ? 9 : 10));\n      }\n    }\n  } else {\n    const fee = `0.${new Array(number - priceLen + 1).join('0')}${priceStr}`;\n    return formatDataNumber(fee.substr(0, 10));\n  }\n};\nexport const analysisInput = (data, number) => {\n  const value = data.toString().substring(74);\n  return handleGetFee(new BigNumber(parseInt(value, 16)).toFixed(), number);\n};\nexport const handleAllTrade = (index, value, isReg) => {\n  const minerRegex = isReg ? new RegExp(['^', value, '$'].join(''), 'i') : value;\n\n  switch (index) {\n    case 'out':\n      return {\n        $or: [{\n          from: minerRegex\n        }, {\n          addr: value\n        }]\n      };\n\n    case 'in':\n      return {\n        $or: [{\n          to: minerRegex\n        }, {\n          addr: value\n        }]\n      };\n\n    case 'all':\n    default:\n      return {\n        $or: [{\n          to: minerRegex\n        }, {\n          from: minerRegex\n        }, {\n          addr: value\n        }]\n      };\n  }\n}; // 判断是否手机\n\nexport const isMobile = userAgent => {\n  const mobileList = new Array('Android', 'iPhone', 'SymbianOS', 'Windows Phone', 'iPad', 'iPod');\n  var mobile = false;\n\n  for (var v = 0; v < mobileList.length; v++) {\n    if (userAgent.indexOf(mobileList[v]) > 0) {\n      mobile = true;\n      break;\n    }\n  }\n\n  return mobile;\n};","map":{"version":3,"sources":["/Users/libaozhong/cr/ccm-front/utils/common.js"],"names":["PermissionDeniedError","RLP","BigNumber","etherUnits","hex2ascii","hexIn","hex","toString","str","ba","decode","test","baToString","e","i","length","String","fromCharCode","parseInt","substr","formatDate","date","Date","y","getFullYear","m","getMonth","d","getDate","h","getHours","m1","getMinutes","getDayName","serTime","td","od","replace","xc","parseQueryString","url","obj","indexOf","arr","split","arr2","colorRgb","sColor","reg","sColorNew","slice","concat","sColorChange","push","join","authenticationAdmin","user","admin","compare","property","a","b","filterBlocks","blocks","constructor","Array","ascii","extraData","extraDataHex","map","block","filterTrace","txs","value","tx","t","type","action","address","from","balance","toEther","refundAddress","to","gas","toNumber","result","gasUsed","formatDataNumber","num","includes","$0","$1","handleGetFee","price","number","priceStr","priceLen","pointNumber","substring","feeArr","splice","fee","analysisInput","data","toFixed","handleAllTrade","index","isReg","minerRegex","RegExp","$or","addr","isMobile","userAgent","mobileList","mobile","v"],"mappings":"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","sourcesContent":["import PermissionDeniedError from '../api/core/error'\nimport RLP from 'rlp'\nimport BigNumber from 'bignumber.js'\nimport etherUnits from '../lib/etherUnits'\n\nconst hex2ascii = (hexIn) => {\n  const hex = hexIn.toString()\n  let str = ''\n\n  try {\n    const ba = RLP.decode(hex)\n    const test = ba[1].toString('ascii')\n\n    if (test == 'geth' || test == 'Parity') {\n      // FIXME\n      ba[0] = ba[0].toString('hex')\n    }\n    str = baToString(ba)\n  } catch (e) {\n    for (let i = 0; i < hex.length; i += 2) str += String.fromCharCode(parseInt(hex.substr(i, 2), 16))\n  }\n  return str\n}\n\n// 日期转换\nexport const formatDate = (date) => {\n  date = new Date(date)\n  const y = date.getFullYear()\n  let m = date.getMonth() + 1\n  let d = date.getDate()\n  const h = date.getHours()\n  let m1 = date.getMinutes()\n  m1 < 10 && (m1 = '0' + m1)\n  m = m < 10 ? '0' + m : m\n  d = d < 10 ? '0' + d : d\n  return y + '-' + m + '-' + d + ' ' + h + ':' + m1\n}\n\nexport const getDayName = (serTime) => {\n  let td = new Date()\n  td = new Date(td.getFullYear(), td.getMonth(), td.getDate())\n  let od = new Date(serTime.replace(/-/g, '/'))\n  od = new Date(od.getFullYear(), od.getMonth(), od.getDate())\n  const xc = (od - td) / 1000 / 60 / 60 / 24\n  if (xc < -2) {\n    return `${-xc}天前`\n  } else if (xc < -1) {\n    return '前天'\n  } else if (xc < 0) {\n    return '昨天'\n  } else if (xc === 0) {\n    return '今天'\n  } else if (xc < 2) {\n    return '明天'\n  } else if (xc < 3) {\n    return '后天'\n  } else {\n    return `${xc}天后`\n  }\n}\n\nexport const parseQueryString = (url) => {\n  const obj = {}\n  const str = url.substr(url.indexOf('?') + 1)\n  const arr = str.split('&')\n  for (let i = 0; i < arr.length; i++) {\n    const arr2 = arr[i].split('=')\n    obj[arr2[0]] = arr2[1]\n  }\n  return obj\n}\nexport const colorRgb = (sColor) => {\n  //十六进制颜色值的正则表达式\n  const reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/\n  // 如果是16进制颜色\n  if (sColor && reg.test(sColor)) {\n    if (sColor.length === 4) {\n      let sColorNew = '#'\n      for (let i = 1; i < 4; i += 1) {\n        sColorNew += sColor.slice(i, i + 1).concat(sColor.slice(i, i + 1))\n      }\n      sColor = sColorNew\n    }\n    //处理六位的颜色值\n    let sColorChange = []\n    for (let i = 1; i < 7; i += 2) {\n      sColorChange.push(parseInt('0x' + sColor.slice(i, i + 2)))\n    }\n    return sColorChange.join(',')\n  }\n  return '255,255,255'\n}\n\nexport const authenticationAdmin = (user) => {\n  if (!user.admin) {\n    throw new PermissionDeniedError('抱歉，请使用管理员账号登陆')\n  }\n  return true\n}\n\nexport const compare = (property) => {\n  return (a, b) => {\n    return b[property] - a[property]\n  }\n}\n\n/* make blocks human readable */\nexport const filterBlocks = (blocks) => {\n  if (blocks.constructor !== Array) {\n    const b = blocks\n    const ascii = hex2ascii(blocks.extraData)\n    b.extraDataHex = blocks.extraData\n    b.extraData = ascii\n    return b\n  }\n  return blocks.map((block) => {\n    const b = block\n    const ascii = hex2ascii(block.extraData)\n    b.extraDataHex = block.extraData\n    b.extraData = ascii\n\n    return b\n  })\n}\n\nexport const filterTrace = (txs, value) => {\n  return txs.map((tx) => {\n    const t = tx\n    if (t.type == 'suicide') {\n      if (t.action.address) t.from = t.action.address\n      if (t.action.balance) t.value = etherUnits.toEther(new BigNumber(t.action.balance), 'wei')\n      if (t.action.refundAddress) t.to = t.action.refundAddress\n    } else {\n      if (t.action.to) t.to = t.action.to\n      t.from = t.action.from\n      if (t.action.gas) t.gas = new BigNumber(t.action.gas).toNumber()\n      if (t.result && t.result.gasUsed) t.gasUsed = new BigNumber(t.result.gasUsed).toNumber()\n      if (t.result && t.result.address) t.to = t.result.address\n      t.value = etherUnits.toEther(new BigNumber(t.action.value), 'wei')\n    }\n    return t\n  })\n}\n// 千分位\nexport const formatDataNumber = (num) => {\n  num += ''\n  if (!num.includes('.')) num += '.'\n  return num\n    .replace(/(\\d)(?=(\\d{3})+\\.)/g, function ($0, $1) {\n      return $1 + ','\n    })\n    .replace(/\\.$/, '')\n}\n\nexport const handleGetFee = (price, number) => {\n  if (!price) {\n    return false\n  }\n  const priceStr = price.toString()\n  const priceLen = priceStr.length\n  if (priceLen > number) {\n    if (number === 0) {\n      return formatDataNumber(priceStr)\n    } else {\n      const pointNumber = priceLen - number\n      if (pointNumber >= 10) {\n        return formatDataNumber(priceStr.substring(0, pointNumber))\n      } else {\n        const feeArr = priceStr.split('')\n        feeArr.splice(priceLen - number, 0, '.')\n        return formatDataNumber(feeArr.join('').substr(0, feeArr[9] === '.' ? 9 : 10))\n      }\n    }\n  } else {\n    const fee = `0.${new Array(number - priceLen + 1).join('0')}${priceStr}`\n    return formatDataNumber(fee.substr(0, 10))\n  }\n}\n\nexport const analysisInput = (data, number) => {\n  const value = data.toString().substring(74)\n  return handleGetFee(new BigNumber(parseInt(value, 16)).toFixed(), number)\n}\n\nexport const handleAllTrade = (index, value, isReg) => {\n  const minerRegex = isReg ? new RegExp(['^', value, '$'].join(''), 'i') : value\n  switch (index) {\n    case 'out':\n      return { $or: [{ from: minerRegex }, { addr: value }] }\n    case 'in':\n      return { $or: [{ to: minerRegex }, { addr: value }] }\n    case 'all':\n    default:\n      return {\n        $or: [{ to: minerRegex }, { from: minerRegex }, { addr: value }]\n      }\n  }\n}\n\n// 判断是否手机\nexport const isMobile = (userAgent) => {\n  const mobileList = new Array('Android', 'iPhone', 'SymbianOS', 'Windows Phone', 'iPad', 'iPod')\n  var mobile = false\n  for (var v = 0; v < mobileList.length; v++) {\n    if (userAgent.indexOf(mobileList[v]) > 0) {\n      mobile = true\n      break\n    }\n  }\n  return mobile\n}\n"]},"metadata":{},"sourceType":"module"}