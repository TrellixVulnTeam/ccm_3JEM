{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _excluded = [\"url\", \"search\", \"pagination\", \"className\"];\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport http from '../../utils/http';\nimport { injectIntl } from 'react-intl';\n\nvar Grid = /*#__PURE__*/function (_Component) {\n  _inherits(Grid, _Component);\n\n  var _super = _createSuper(Grid);\n\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      loading: false,\n      uploadLoading: false,\n      dataSource: [],\n      pagingConfig: props.pagination === false ? false : _this.setPagination(props.pagination || {})\n    };\n    return _this;\n  }\n\n  _createClass(Grid, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.url && this.props.isShow) {\n        var _this$state$pagingCon = this.state.pagingConfig,\n            current = _this$state$pagingCon.current,\n            pageSize = _this$state$pagingCon.pageSize;\n        pageSize ? this.queryListByPaging(current, pageSize) : this.queryList();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          url = _this$props.url,\n          search = _this$props.search,\n          otherParam = _this$props.otherParam;\n\n      if (prevProps.search !== search && url || prevProps.otherParam !== otherParam && url || prevProps.url !== url) {\n        var pageSize = this.state.pagingConfig.pageSize;\n        pageSize ? this.queryListByPaging(1, pageSize) : this.queryList();\n      }\n    }\n  }, {\n    key: \"setPagination\",\n    value: function setPagination(data) {\n      var _this2 = this;\n\n      var _onChange = data.onChange,\n          _onShowSizeChange = data.onShowSizeChange;\n      var intl = this.props.intl;\n      return Object.assign({\n        showSizeChanger: true,\n        showQuickJumper: true,\n        pageSize: 10,\n        current: 1,\n        showTotal: function showTotal(total, range) {\n          return \"\".concat(intl.messages.lang59).concat(total).concat(intl.messages.lang60).concat(range[0], \"-\").concat(range[1]).concat(intl.messages.lang61);\n        }\n      }, data, {\n        onChange: function onChange(current, pageSize) {\n          return _this2.queryListByPaging(current, pageSize).then(function () {\n            return _onChange === null || _onChange === void 0 ? void 0 : _onChange(current, pageSize);\n          });\n        },\n        onShowSizeChange: function onShowSizeChange(current, pageSize) {\n          return _this2.queryListByPaging(current, pageSize).then(function () {\n            return _onShowSizeChange === null || _onShowSizeChange === void 0 ? void 0 : _onShowSizeChange(current, pageSize);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"queryListByPaging\",\n    value: function queryListByPaging(pn, ps) {\n      var _this3 = this;\n\n      this.setState({\n        loading: true\n      });\n      var _this$props2 = this.props,\n          url = _this$props2.url,\n          search = _this$props2.search,\n          otherParam = _this$props2.otherParam;\n      return http.get(\"\".concat(url, \"?pn=\").concat(pn, \"&ps=\").concat(ps).concat(otherParam || ''), function (_ref) {\n        var rows = _ref.rows,\n            total = _ref.total;\n\n        _this3.setState({\n          loading: false,\n          dataSource: rows,\n          pagingConfig: Object.assign({}, _this3.state.pagingConfig, {\n            current: pn,\n            pageSize: ps,\n            total: total\n          })\n        });\n      });\n    } // 自定义 otherParam 为对象\n\n  }, {\n    key: \"queryList\",\n    value: function queryList() {\n      var _this4 = this;\n\n      this.setState({\n        loading: true\n      });\n      var _this$props3 = this.props,\n          url = _this$props3.url,\n          search = _this$props3.search,\n          otherParam = _this$props3.otherParam;\n      return http.get(url, {\n        params: Object.assign(search, otherParam)\n      }, function (data) {\n        _this4.setState({\n          loading: false,\n          dataSource: data\n        });\n      });\n    } // 若存在复选框，获取选中数据\n\n  }, {\n    key: \"getSelectedData\",\n    value: function getSelectedData() {// return this.state.selectedList;\n    }\n  }, {\n    key: \"refreshGrid\",\n    value: function refreshGrid(isCurrent) {\n      var _this$state$pagingCon2 = this.state.pagingConfig,\n          current = _this$state$pagingCon2.current,\n          pageSize = _this$state$pagingCon2.pageSize;\n      pageSize ? this.queryListByPaging(isCurrent ? current : 1, pageSize) : this.queryList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loading = _this$state.loading,\n          dataSource = _this$state.dataSource,\n          pagingConfig = _this$state.pagingConfig;\n\n      var _this$props4 = this.props,\n          url = _this$props4.url,\n          search = _this$props4.search,\n          pagination = _this$props4.pagination,\n          className = _this$props4.className,\n          params = _objectWithoutProperties(_this$props4, _excluded);\n\n      return __jsx(_Table, _extends({\n        className: \"mx-grid\",\n        rowKey: \"_id\",\n        loading: loading,\n        pagination: pagingConfig,\n        dataSource: dataSource\n      }, params));\n    }\n  }]);\n\n  return Grid;\n}(Component);\n\nexport default injectIntl(Grid);","map":{"version":3,"sources":["/Users/libaozhong/cr/ccm-front/components/table/Grid-web.js"],"names":["React","Component","http","injectIntl","Grid","props","state","loading","uploadLoading","dataSource","pagingConfig","pagination","setPagination","url","isShow","current","pageSize","queryListByPaging","queryList","prevProps","search","otherParam","data","onChange","onShowSizeChange","intl","Object","assign","showSizeChanger","showQuickJumper","showTotal","total","range","messages","lang59","lang60","lang61","then","pn","ps","setState","get","rows","params","isCurrent","className"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Table } from 'antd'\nimport http from '../../utils/http'\nimport { injectIntl } from 'react-intl'\n\nclass Grid extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: false,\n      uploadLoading: false,\n      dataSource: [],\n      pagingConfig: props.pagination === false ? false : this.setPagination(props.pagination || {})\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.url && this.props.isShow) {\n      const { current, pageSize } = this.state.pagingConfig\n      pageSize ? this.queryListByPaging(current, pageSize) : this.queryList()\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { url, search, otherParam } = this.props\n    if ((prevProps.search !== search && url) || (prevProps.otherParam !== otherParam && url) || prevProps.url !== url) {\n      const { pageSize } = this.state.pagingConfig\n      pageSize ? this.queryListByPaging(1, pageSize) : this.queryList()\n    }\n  }\n\n  setPagination(data) {\n    const { onChange, onShowSizeChange } = data\n    const { intl } = this.props\n    return Object.assign(\n      {\n        showSizeChanger: true,\n        showQuickJumper: true,\n        pageSize: 10,\n        current: 1,\n        showTotal: (total, range) => `${intl.messages.lang59}${total}${intl.messages.lang60}${range[0]}-${range[1]}${intl.messages.lang61}`\n      },\n      data,\n      {\n        onChange: (current, pageSize) => this.queryListByPaging(current, pageSize).then(() => onChange?.(current, pageSize)),\n        onShowSizeChange: (current, pageSize) => this.queryListByPaging(current, pageSize).then(() => onShowSizeChange?.(current, pageSize))\n      }\n    )\n  }\n\n  queryListByPaging(pn, ps) {\n    this.setState({ loading: true })\n    const { url, search, otherParam } = this.props\n    return http.get(`${url}?pn=${pn}&ps=${ps}${otherParam || ''}`, ({ rows, total }) => {\n      this.setState({\n        loading: false,\n        dataSource: rows,\n        pagingConfig: Object.assign({}, this.state.pagingConfig, {\n          current: pn,\n          pageSize: ps,\n          total\n        })\n      })\n    })\n  }\n\n  // 自定义 otherParam 为对象\n  queryList() {\n    this.setState({ loading: true })\n    const { url, search, otherParam } = this.props\n    return http.get(url, { params: Object.assign(search, otherParam) }, (data) => {\n      this.setState({\n        loading: false,\n        dataSource: data\n      })\n    })\n  }\n\n  // 若存在复选框，获取选中数据\n  getSelectedData() {\n    // return this.state.selectedList;\n  }\n\n  refreshGrid(isCurrent) {\n    const { current, pageSize } = this.state.pagingConfig\n    pageSize ? this.queryListByPaging(isCurrent ? current : 1, pageSize) : this.queryList()\n  }\n  render() {\n    const { loading, dataSource, pagingConfig } = this.state\n    const { url, search, pagination, className, ...params } = this.props\n    return <Table className=\"mx-grid\" rowKey=\"_id\" loading={loading} pagination={pagingConfig} dataSource={dataSource} {...params} />\n  }\n}\n\nexport default injectIntl(Grid)\n"]},"metadata":{},"sourceType":"module"}