{"version":3,"file":"static/development/pages/api/main.js","sources":["webpack:///webpack/bootstrap","webpack:///./api/addr.js","webpack:///./api/balance.js","webpack:///./api/block.js","webpack:///./api/core/error.js","webpack:///./api/core/middleware.js","webpack:///./api/core/monitorWeb3.js","webpack:///./api/core/router.js","webpack:///./api/home.js","webpack:///./api/receiver.js","webpack:///./api/trade.js","webpack:///./lib/etherUnits.js","webpack:///./pages/api/main.js","webpack:///./utils/common.js","webpack:///./utils/date.js","webpack:///external \"bignumber.js\"","webpack:///external \"mongoose\"","webpack:///external \"rlp\"","webpack:///external \"web3\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import Router from './core/router'\nimport mongoose from 'mongoose'\nimport { parseQueryString, handleAllTrade } from '../utils/common'\n\nconst { Transaction, Account, Contract, TokenTransfer, Block } = mongoose.models\n\nRouter.get('/addr/info/{addr}', async ({ params }) => {\n  const account = await Account.findOne({ address: params.addr })\n  const transaction = await Transaction.find(handleAllTrade('all', params.addr)).count()\n  const tokenTransfer = await TokenTransfer.aggregate([{ $match: { $or: [{ from: params.addr }, { to: params.addr }] } }, { $group: { _id: '$contract' } }])\n  let token = await Promise.all(\n    tokenTransfer.map(async (item) => {\n      return await Contract.findOne({ address: item._id })\n    })\n  )\n  let list = []\n  token.forEach((item) => {\n    item && list.push(item)\n  })\n  return {\n    token: list,\n    balance: account?._doc.balance,\n    tradeNumber: transaction\n  }\n})\n\nRouter.get('/addr/info/trade/{addr}', async ({ params, url }) => {\n  const paramQuery = parseQueryString(url)\n  const ps = parseInt(paramQuery.ps) || 10\n  const pn = parseInt(paramQuery.pn) || 1\n  const rows = await Transaction.find(handleAllTrade(paramQuery.trade, params.addr))\n    .sort({ blockNumber: -1 })\n    .skip((pn - 1) * ps)\n    .limit(ps)\n  const total = await Transaction.find(handleAllTrade(paramQuery.trade, params.addr)).count()\n  return { rows, total }\n})\n\nRouter.get('/addr/info/tokenTrade/{addr}', async ({ params, url }) => {\n  const paramQuery = parseQueryString(url)\n  const ps = parseInt(paramQuery.ps) || 10\n  const pn = parseInt(paramQuery.pn) || 1\n  let tokenTransfer = await Transaction.find({ $or: [{ from: params.addr }, { addr: params.addr }], $and: [{ value: '0' }, { to: { $exists: true } }] })\n    .lean(true)\n    .sort({ blockNumber: -1 })\n    .skip((pn - 1) * ps)\n    .limit(ps)\n  const list = await Promise.all(\n    tokenTransfer.map(async (item) => {\n      return await Contract.findOne({ address: item.to })\n    })\n  )\n  tokenTransfer.forEach((item) => {\n    const contract = list.find((li) => item.to.toUpperCase() === li.address.toUpperCase())\n    item.symbol = contract.symbol\n    item.decimals = contract.decimals\n  })\n  const total = await Transaction.find({ $or: [{ from: params.addr }, { addr: params.addr }], $and: [{ value: '0' }] }).count()\n  return { rows: tokenTransfer, total }\n})\n","import Router from './core/router'\nimport web3 from './core/monitorWeb3'\nimport BigNumber from 'bignumber.js'\nimport { parseQueryString } from '../utils/common'\n\nconst contractabi = [\n  {\n    constant: true,\n    inputs: [{ name: '_owner', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: 'balance', type: 'uint256' }],\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'decimals',\n    outputs: [{ name: '', type: 'uint8' }],\n    type: 'function'\n  }\n]\n\nRouter.get('/addr/token/balance', async ({ url }) => {\n  const param = parseQueryString(url)\n  const { address, contractaddress, decimals } = param\n  const contractother = web3.eth.Contract(contractabi, contractaddress)\n  const balance = await contractother.methods.balanceOf(address).call()\n  if (balance) {\n    const Ether = new BigNumber(`10e${decimals !== undefined ? decimals - 1 : 17}`)\n    let ret = new BigNumber(balance)\n    const data = ret.dividedBy(Ether)\n    return data\n  } else {\n    return ''\n  }\n})\n","import Router from './core/router'\nimport { parseQueryString, filterTrace } from '../utils/common'\nimport mongoose from 'mongoose'\n\nconst { Block, Transaction } = mongoose.models\n\nRouter.get('/block', async ({ url }) => {\n  const param = parseQueryString(url)\n  const ps = parseInt(param.ps) || 10\n  const pn = parseInt(param.pn) || 1\n  const block = await Block.find({})\n    .lean(true)\n    .sort({ number: -1 })\n    .skip((pn - 1) * ps)\n    .limit(ps)\n  const total = await Block.aggregate([{ $group: { _id: null, count: { $sum: 1 } } }])\n  const blockNumber = block[block.length - 1].number\n  const results = await Transaction.aggregate([{ $match: { blockNumber: { $gte: blockNumber } } }, { $group: { _id: '$blockNumber', count: { $sum: 1 } } }])\n  let txns = {}\n  results.forEach((txn) => {\n    txns[txn._id] = txn.count\n  })\n  block.forEach((doc) => {\n    doc.txn = txns[doc.number] || 0\n  })\n  return { rows: block, total: total[0].count }\n})\n\nRouter.get('/block/{id}', async ({ params }) => {\n  let results = await Block.findOne({ number: params.id })\n  const ts = await Transaction.aggregate([{ $match: { blockNumber: { $gte: results.number } } }, { $group: { _id: '$blockNumber', count: { $sum: 1 } } }])\n  const tsNumber = ts.find((item) => item._id === parseInt(params.id))?.count || 0\n  return { ts: tsNumber, ...results._doc }\n})\n","export class AuthError extends Error {}\n\nexport class PermissionDeniedError extends Error {}\n\nexport class RouterNotFoundError extends Error {}\n\nexport default class BizError extends Error {}\n","import { dateid } from '../../utils/date';\nimport BizError, {\n  AuthError,\n  RouterNotFoundError,\n  PermissionDeniedError,\n} from './error';\n\nexport default (handler, ...middles) => async (req, res) => {\n  try {\n    for (let i = 0; i < middles.length; i++) {\n      await eval(`${middles[i]}(req,res)`);\n    }\n    const result = await handler(req, res);\n    return result ? res.json(result) : res.end();\n  } catch (e) {\n    const date = dateid();\n    const code = getErrorStatus(e);\n    const message = e.message;\n    console.error(`ERROR_CODE: ${date}.${code} ${message}`);\n    console.error(e);\n    res.status(code).json({ date, code, message });\n  }\n};\n\nconst getErrorStatus = (e) => {\n  let status;\n  if (e instanceof BizError) {\n    status = 400;\n  } else if (e instanceof AuthError) {\n    status = 401;\n  } else if (e instanceof PermissionDeniedError) {\n    status = 403;\n  } else if (e instanceof RouterNotFoundError) {\n    status = 404;\n  } else {\n    status = 500;\n  }\n  return status;\n};\n","import Web3 from 'web3'\n\nconst config = process.cfg.config\n\nconst getProvider = () => {\n  const provider = new Web3.providers.WebsocketProvider(`ws://${config.nodeAddr}:${config.wsPort.toString()}`)\n  provider.on('connect', () => console.log('WS Connected'))\n  provider.on('error', (e) => {\n    console.error('WS Error', e)\n    web3.setProvider(getProvider())\n  })\n  provider.on('end', (e) => {\n    console.error('WS End', e)\n    web3.setProvider(getProvider())\n  })\n\n  return provider\n}\n\nconst getWeb3 = () => {\n  if (global.web3?.eth) {\n    return global.web3\n  } else {\n    const web3 = new Web3(getProvider())\n    global.web3 = web3\n    return web3\n  }\n}\n\nexport default getWeb3()\n","import { RouterNotFoundError } from './error'\n\nexport default class Router {\n  static routerMap = {\n    GET: {},\n    POST: {},\n    PUT: {},\n    PATCH: {},\n    DELETE: {}\n  }\n\n  static get(url, func) {\n    this.routerMap['GET'][url] = func\n  }\n\n  static post(url, func) {\n    this.routerMap['POST'][url] = func\n  }\n\n  static put(url, func) {\n    this.routerMap['PUT'][url] = func\n  }\n\n  static patch(url, func) {\n    this.routerMap['PATCH'][url] = func\n  }\n\n  static delete(url, func) {\n    this.routerMap['DELETE'][url] = func\n  }\n}\n\nexport const dispatchRequest = async (req, res) => {\n  const handleRouter = matchingRouter(req)\n  if (handleRouter) {\n    return await handleRouter(req, res)\n  }\n  throw new RouterNotFoundError('404 not found')\n}\n\nconst matchingRouter = (req) => {\n  const pathname = req.pathname.substring(4)\n  req.params = {}\n  //处理该类型请求的路由\n  const handleReqRouters = Router.routerMap[req.method]\n  if (handleReqRouters) {\n    const allRouterMethodName = Object.keys(handleReqRouters)\n    const reqPathArr = pathname.split('/').filter((s) => s !== '')\n    const handleMethodName = allRouterMethodName.find((k) => {\n      const routerPathArr = k.split('/').filter((s) => s !== '')\n      const length = Math.max(reqPathArr.length, routerPathArr.length)\n      for (let i = 0; i < length; i++) {\n        const v1 = routerPathArr[i]\n        const v2 = reqPathArr[i]\n        if (v1 === v2) {\n          continue\n        } else if (v1 && v2 && v1.startsWith('{')) {\n          req.params[v1.substring(1, v1.length - 1)] = v2\n          continue\n        }\n        return false\n      }\n      return k\n    })\n    return handleReqRouters[handleMethodName]\n  }\n}\n","import Router from './core/router'\nimport { filterBlocks } from '../utils/common'\nimport mongoose from 'mongoose'\n\nconst { Block, Transaction, TokenTransfer, Market } = mongoose.models\n\nRouter.get('/home/info', async ({ url }, res) => {\n  console.log(\"开始查询home\")\n  const block = await Block.findOne({}).sort({ number: -1 }).limit(1)\n  const market = await Market.findOne({})\n  const transactionNumber = await Transaction.find({}).count()\n  const tokenTransfer = await TokenTransfer.find({}).count()\n  const tradeNumber = transactionNumber + tokenTransfer\n  return {\n    block: block.number,\n    change: market?market.change:\"\",\n    vol: market?market.vol:\"\",\n    last: market?market.last:\"\",\n    tradeNumber\n  }\n})\n\nRouter.get('/home/charts', async ({ url }, res) => {\n  const charts = await Transaction.aggregate([\n    {\n      $match: {\n        timestamp: {\n          $gte: new Date().getTime() / 1000 - 10 * 24 * 60 * 60\n        }\n      }\n    },\n    {\n      $group: {\n        _id: {\n          year: {\n            $year: {\n              $add: [new Date(0), { $multiply: [1000, '$timestamp'] }]\n            }\n          },\n          mmonth: {\n            $month: {\n              $add: [new Date(0), { $multiply: [1000, '$timestamp'] }]\n            }\n          },\n          day: {\n            $dayOfMonth: {\n              $add: [new Date(0), { $multiply: [1000, '$timestamp'] }]\n            }\n          }\n        },\n        count: { $sum: 1 }\n      }\n    }\n  ])\n  const list = charts.sort((a, b) => {\n    if (a._id.year === b._id.year) {\n      if (a._id.mmonth === b._id.mmonth) {\n        return a._id.day - b._id.day\n      }\n      return a._id.mmonth - b._id.mmonth\n    }\n    return a._id.year - b._id.year\n  })\n  return list\n})\n\nRouter.get('/home/block', async ({ url }, res) => {\n  const block = await Block.find({}).lean(true).sort({ number: -1 }).limit(10)\n  const blockNumber = block[block.length - 1].number\n  const results = await Transaction.aggregate([{ $match: { blockNumber: { $gte: blockNumber } } }, { $group: { _id: '$blockNumber', count: { $sum: 1 } } }])\n  let txns = {}\n  results.forEach((txn) => {\n    txns[txn._id] = txn.count\n  })\n  block.forEach((doc) => {\n    doc.txn = txns[doc.number] || 0\n  })\n  return filterBlocks(block)\n})\n\nRouter.get('/home/trade', async ({ url }, res) => {\n  const results = await Transaction.find({}).lean(true).sort({ blockNumber: -1 }).limit(10)\n  return results\n})\n","import Router from './core/router'\nimport { parseQueryString, handleAllTrade } from '../utils/common'\nimport mongoose from 'mongoose'\nconst { Contract, TokenTransfer, Transaction } = mongoose.models\n\nRouter.get('/receiver/info/{addr}', async ({ params }) => {\n  const contract = await Contract.findOne({ address: params.addr })\n  return contract\n})\n\nRouter.get('/receiver/list/{addr}', async ({ params, url }) => {\n  const paramQuery = parseQueryString(url)\n  const ps = parseInt(paramQuery.ps) || 10\n  const pn = parseInt(paramQuery.pn) || 1\n\n  const total = await Transaction.find(handleAllTrade(paramQuery.trade, params.addr)).count()\n  let tokenTransfer = await Transaction.find(handleAllTrade(paramQuery.trade, params.addr))\n    .sort({ blockNumber: -1 })\n    .skip((pn - 1) * ps)\n    .limit(ps)\n  const list = await Promise.all(\n    tokenTransfer.map(async (item) => {\n      return await Contract.findOne({ address: item.to })\n    })\n  )\n  tokenTransfer.forEach((item) => {\n    const contract = list.find((li) => item.to.toUpperCase() === li.address.toUpperCase())\n    item._doc.symbol = contract.symbol\n    item._doc.decimals = contract.decimals\n  })\n  return { total, rows: tokenTransfer }\n})\n","import Router from './core/router'\nimport { parseQueryString } from '../utils/common'\nimport web3 from './core/monitorWeb3'\nimport mongoose from 'mongoose'\nimport BizError from './core/error'\n\nconst { Transaction, TokenTransfer, Contract, Block } = mongoose.models\n\nRouter.get('/trade', async ({ url }) => {\n  const param = parseQueryString(url)\n  const ps = parseInt(param.ps) || 10\n  const pn = parseInt(param.pn) || 1\n  const block = await Transaction.find({})\n    .lean(true)\n    .sort({ blockNumber: -1 })\n    .skip((pn - 1) * ps)\n    .limit(ps)\n  const total = await Transaction.find({}).count()\n\n  return { rows: block, total }\n})\n\nRouter.get('/trade/hash/{hash}', async ({ params }) => {\n  let results = await Transaction.findOne({ hash: params.hash })\n  const block = await Block.findOne().sort({ number: -1 }).limit(1)\n  if (!results) {\n    throw new BizError('hash Error')\n  }\n\n  results._doc.newBlockNumber = block?._doc.number\n\n  const contract = await Contract.findOne({ address: results?._doc.to })\n  results._doc.statusV = '0x37'\n  if (contract) {\n    results._doc.statusV = '0x38'\n    const tokenTransfer = await TokenTransfer.findOne({ hash: params.hash })\n    results._doc.realAddress = tokenTransfer?._doc.to\n    const contract = await Contract.findOne({ address: results?._doc.to })\n    results._doc.symbol = contract?._doc.symbol\n    results._doc.decimals = contract?._doc.decimals\n    const tradeInfo = await web3.eth.getTransactionReceipt(params.hash)\n    results._doc.isSuccess = !!tradeInfo?.logs?.length\n  }\n  return results\n})\n\nRouter.get('/trade/addr/{hash}', async ({ params }) => {\n  let results = await Transaction.findOne({ hash: params.hash })\n  if (results?._doc.v === '0x38') {\n    const tokenTransfer = await TokenTransfer.findOne({ hash: params.hash })\n    results._doc.realAddress = tokenTransfer?._doc.to\n  }\n  return results\n})\n\nRouter.get('/trade/number/{number}', async ({ params, url }) => {\n  const param = parseQueryString(url)\n  const ps = parseInt(param.ps) || 10\n  const pn = parseInt(param.pn) || 1\n  const rows = await Transaction.find({ blockNumber: params.number })\n    .lean(true)\n    .sort({ blockNumber: -1 })\n    .skip((pn - 1) * ps)\n    .limit(ps)\n  const total = await Transaction.find({ blockNumber: params.number }).count()\n  return { rows, total }\n})\n","'use strict';\n\nconst BigNumber = require('bignumber.js');\n\nconst etherUnits = function () {};\netherUnits.unitMap = {\n  wei: '1',\n  kwei: '1000',\n  ada: '1000',\n  femtoether: '1000',\n  mwei: '1000000',\n  babbage: '1000000',\n  picoether: '1000000',\n  gwei: '1000000000',\n  shannon: '1000000000',\n  nanoether: '1000000000',\n  nano: '1000000000',\n  szabo: '1000000000000',\n  microether: '1000000000000',\n  micro: '1000000000000',\n  finney: '1000000000000000',\n  milliether: '1000000000000000',\n  milli: '1000000000000000',\n  ether: '1000000000000000000',\n  kether: '1000000000000000000000',\n  grand: '1000000000000000000000',\n  einstein: '1000000000000000000000',\n  mether: '1000000000000000000000000',\n  gether: '1000000000000000000000000000',\n  tether: '1000000000000000000000000000000',\n};\netherUnits.getValueOfUnit = function (unit) {\n  unit = unit ? unit.toLowerCase() : 'ether';\n  const unitValue = this.unitMap[unit];\n  if (unitValue === undefined) {\n    throw new Error(\n      globalFuncs.errorMsgs[4] + JSON.stringify(this.unitMap, null, 2)\n    );\n  }\n  return new BigNumber(unitValue, 10);\n};\n\netherUnits.toEther = function (number, unit) {\n  const returnValue = new BigNumber(this.toWei(number, unit)).div(\n    this.getValueOfUnit('ether')\n  );\n  return returnValue.toString(10);\n};\n\netherUnits.toGwei = function (number, unit) {\n  const returnValue = new BigNumber(this.toWei(number, unit)).div(\n    this.getValueOfUnit('gwei')\n  );\n  return returnValue.toString(10);\n};\n\netherUnits.toWei = function (number, unit) {\n  const returnValue = new BigNumber(String(number)).times(\n    this.getValueOfUnit(unit)\n  );\n  return returnValue.toString(10);\n};\n\nmodule.exports = etherUnits;\n","import { dispatchRequest } from '../../api/core/router'\nimport withMiddleware from '../../api/core/middleware'\nimport '../../api/home'\nimport '../../api/block'\nimport '../../api/trade'\nimport '../../api/addr'\nimport '../../api/receiver'\nimport '../../api/balance'\n\nconst handle = async (req, res) => {\n  return await dispatchRequest(req, res)\n}\n\nexport default withMiddleware(handle)\n","import PermissionDeniedError from '../api/core/error'\nimport RLP from 'rlp'\nimport BigNumber from 'bignumber.js'\nimport etherUnits from '../lib/etherUnits'\n\nconst hex2ascii = (hexIn) => {\n  const hex = hexIn.toString()\n  let str = ''\n\n  try {\n    const ba = RLP.decode(hex)\n    const test = ba[1].toString('ascii')\n\n    if (test == 'geth' || test == 'Parity') {\n      // FIXME\n      ba[0] = ba[0].toString('hex')\n    }\n    str = baToString(ba)\n  } catch (e) {\n    for (let i = 0; i < hex.length; i += 2) str += String.fromCharCode(parseInt(hex.substr(i, 2), 16))\n  }\n  return str\n}\n\n// 日期转换\nexport const formatDate = (date) => {\n  date = new Date(date)\n  const y = date.getFullYear()\n  let m = date.getMonth() + 1\n  let d = date.getDate()\n  const h = date.getHours()\n  let m1 = date.getMinutes()\n  m1 < 10 && (m1 = '0' + m1)\n  m = m < 10 ? '0' + m : m\n  d = d < 10 ? '0' + d : d\n  return y + '-' + m + '-' + d + ' ' + h + ':' + m1\n}\n\nexport const getDayName = (serTime) => {\n  let td = new Date()\n  td = new Date(td.getFullYear(), td.getMonth(), td.getDate())\n  let od = new Date(serTime.replace(/-/g, '/'))\n  od = new Date(od.getFullYear(), od.getMonth(), od.getDate())\n  const xc = (od - td) / 1000 / 60 / 60 / 24\n  if (xc < -2) {\n    return `${-xc}天前`\n  } else if (xc < -1) {\n    return '前天'\n  } else if (xc < 0) {\n    return '昨天'\n  } else if (xc === 0) {\n    return '今天'\n  } else if (xc < 2) {\n    return '明天'\n  } else if (xc < 3) {\n    return '后天'\n  } else {\n    return `${xc}天后`\n  }\n}\n\nexport const parseQueryString = (url) => {\n  const obj = {}\n  const str = url.substr(url.indexOf('?') + 1)\n  const arr = str.split('&')\n  for (let i = 0; i < arr.length; i++) {\n    const arr2 = arr[i].split('=')\n    obj[arr2[0]] = arr2[1]\n  }\n  return obj\n}\nexport const colorRgb = (sColor) => {\n  //十六进制颜色值的正则表达式\n  const reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/\n  // 如果是16进制颜色\n  if (sColor && reg.test(sColor)) {\n    if (sColor.length === 4) {\n      let sColorNew = '#'\n      for (let i = 1; i < 4; i += 1) {\n        sColorNew += sColor.slice(i, i + 1).concat(sColor.slice(i, i + 1))\n      }\n      sColor = sColorNew\n    }\n    //处理六位的颜色值\n    let sColorChange = []\n    for (let i = 1; i < 7; i += 2) {\n      sColorChange.push(parseInt('0x' + sColor.slice(i, i + 2)))\n    }\n    return sColorChange.join(',')\n  }\n  return '255,255,255'\n}\n\nexport const authenticationAdmin = (user) => {\n  if (!user.admin) {\n    throw new PermissionDeniedError('抱歉，请使用管理员账号登陆')\n  }\n  return true\n}\n\nexport const compare = (property) => {\n  return (a, b) => {\n    return b[property] - a[property]\n  }\n}\n\n/* make blocks human readable */\nexport const filterBlocks = (blocks) => {\n  if (blocks.constructor !== Array) {\n    const b = blocks\n    const ascii = hex2ascii(blocks.extraData)\n    b.extraDataHex = blocks.extraData\n    b.extraData = ascii\n    return b\n  }\n  return blocks.map((block) => {\n    const b = block\n    const ascii = hex2ascii(block.extraData)\n    b.extraDataHex = block.extraData\n    b.extraData = ascii\n\n    return b\n  })\n}\n\nexport const filterTrace = (txs, value) => {\n  return txs.map((tx) => {\n    const t = tx\n    if (t.type == 'suicide') {\n      if (t.action.address) t.from = t.action.address\n      if (t.action.balance) t.value = etherUnits.toEther(new BigNumber(t.action.balance), 'wei')\n      if (t.action.refundAddress) t.to = t.action.refundAddress\n    } else {\n      if (t.action.to) t.to = t.action.to\n      t.from = t.action.from\n      if (t.action.gas) t.gas = new BigNumber(t.action.gas).toNumber()\n      if (t.result && t.result.gasUsed) t.gasUsed = new BigNumber(t.result.gasUsed).toNumber()\n      if (t.result && t.result.address) t.to = t.result.address\n      t.value = etherUnits.toEther(new BigNumber(t.action.value), 'wei')\n    }\n    return t\n  })\n}\n// 千分位\nexport const formatDataNumber = (num) => {\n  num += ''\n  if (!num.includes('.')) num += '.'\n  return num\n    .replace(/(\\d)(?=(\\d{3})+\\.)/g, function ($0, $1) {\n      return $1 + ','\n    })\n    .replace(/\\.$/, '')\n}\n\nexport const handleGetFee = (price, number) => {\n  if (!price) {\n    return false\n  }\n  const priceStr = price.toString()\n  const priceLen = priceStr.length\n  if (priceLen > number) {\n    if (number === 0) {\n      return formatDataNumber(priceStr)\n    } else {\n      const pointNumber = priceLen - number\n      if (pointNumber >= 10) {\n        return formatDataNumber(priceStr.substring(0, pointNumber))\n      } else {\n        const feeArr = priceStr.split('')\n        feeArr.splice(priceLen - number, 0, '.')\n        return formatDataNumber(feeArr.join('').substr(0, feeArr[9] === '.' ? 9 : 10))\n      }\n    }\n  } else {\n    const fee = `0.${new Array(number - priceLen + 1).join('0')}${priceStr}`\n    return formatDataNumber(fee.substr(0, 10))\n  }\n}\n\nexport const analysisInput = (data, number) => {\n  const value = data.toString().substring(74)\n  return handleGetFee(new BigNumber(parseInt(value, 16)).toFixed(), number)\n}\n\nexport const handleAllTrade = (index, value, isReg) => {\n  const minerRegex = isReg ? new RegExp(['^', value, '$'].join(''), 'i') : value\n  switch (index) {\n    case 'out':\n      return { $or: [{ from: minerRegex }, { addr: value }] }\n    case 'in':\n      return { $or: [{ to: minerRegex }, { addr: value }] }\n    case 'all':\n    default:\n      return {\n        $or: [{ to: minerRegex }, { from: minerRegex }, { addr: value }]\n      }\n  }\n}\n\n// 判断是否手机\nexport const isMobile = (userAgent) => {\n  const mobileList = new Array('Android', 'iPhone', 'SymbianOS', 'Windows Phone', 'iPad', 'iPod')\n  var mobile = false\n  for (var v = 0; v < mobileList.length; v++) {\n    if (userAgent.indexOf(mobileList[v]) > 0) {\n      mobile = true\n      break\n    }\n  }\n  return mobile\n}\n","const placezero = (num) => {\n  return num > 10 ? '' + num : '0' + num;\n};\n\nexport const dateid = () => {\n  const cur = new Date();\n  return (\n    placezero(cur.getHours()) +\n    placezero(cur.getMinutes()) +\n    placezero(cur.getSeconds()) +\n    placezero(cur.getDate()) +\n    ('' + Math.random()).substring(2, 6)\n  );\n};\n\nexport const format = (date) => {\n  if (date) {\n    return (\n      placezero(date.getFullYear()) +\n      '-' +\n      placezero(date.getMonth() + 1) +\n      '-' +\n      placezero(date.getDate()) +\n      ' ' +\n      placezero(date.getHours()) +\n      ':' +\n      placezero(date.getMinutes()) +\n      ':' +\n      placezero(date.getSeconds())\n    );\n  } else {\n    return null;\n  }\n};\n\n/*\n  Convert unix timestamp to something that doesn't suck\n*/\nexport const getDuration = (timestamp, lang, number = 1) => {\n  var millis = Date.now() - timestamp * 1000;\n  var dur = [];\n  var units = [\n    { labelZh: '毫秒', label: 'millis', mod: 1000 },\n    { labelZh: '秒', label: 'seconds', mod: 60 },\n    { labelZh: '分钟', label: 'mins', mod: 60 },\n    { labelZh: '小时', label: 'hours', mod: 24 },\n    { labelZh: '天', label: 'days', mod: 365 },\n    { labelZh: '年', label: 'years', mod: 1000 },\n  ];\n  // calculate the individual unit values\n  units.forEach(function (u) {\n    var val = millis % u.mod;\n    millis = (millis - val) / u.mod;\n    if (u.label == 'millis') return;\n    if (val > 0)\n      dur.push({ label: lang === 'en' ? u.label : u.labelZh, val: val });\n  });\n  // convert object to string representation\n  dur.toString = function () {\n    return dur\n      .reverse()\n      .slice(0, number)\n      .map(function (d) {\n        return (\n          d.val +\n          ' ' +\n          (d.val == 1 && lang === 'en' ? d.label.slice(0, -1) : d.label)\n        );\n      })\n      .join(lang === 'en' ? ', ' : ' ');\n  };\n  return dur;\n};\n","module.exports = require(\"bignumber.js\");","module.exports = require(\"mongoose\");","module.exports = require(\"rlp\");","module.exports = require(\"web3\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;AC3DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AALA;AAQA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AALA;AASA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC7BA;AAEA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AALA;AACA;AA4BA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AADA;AADA;AADA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AADA;AAKA;AACA;AACA;AAAA;AAAA;AADA;AADA;AAKA;AACA;AACA;AAAA;AAAA;AADA;AADA;AAXA;AAiBA;AAAA;AAAA;AAlBA;AADA;AAuBA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACnFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAGA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAGA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;AACA;AAyBA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;;;;;;;;;;;;AC/DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACblNA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAEA;AACA;AACA;AAaA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAIA;AAKA;AAEA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACxEA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}